using System;
using System.Collections.Generic;
using System.Reflection;
using System.Text;

namespace Rawr
{
    /// <summary>
    /// This file is automatically generated by the Rawr.TalentClassGenerator tool. Please don't edit it directly.
    /// </summary>
    [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)]
    public sealed class TalentDataAttribute : Attribute
    {
        public TalentDataAttribute(int index, string name, int maxPoints, int tree, int column, int row, int prerequisite, string[] description, string icon)
        {
            _index = index;
            _name = name;
            _maxPoints = maxPoints;
            _tree = tree;
            _column = column;
            _row = row;
            _prerequisite = prerequisite;
            _description = description;
            _icon = icon;
        }

        private readonly int _index;
        private readonly string _name;
        private readonly int _maxPoints;
        private readonly int _tree;
        private readonly int _column;
        private readonly int _row;
        private readonly int _prerequisite;
        private readonly string _icon;
        private readonly string[] _description;

        public int Index { get { return _index; } }
        public string Name { get { return _name; } }
        public int MaxPoints { get { return _maxPoints; } }
        public int Tree { get { return _tree; } }
        public int Column { get { return _column; } }
        public int Row { get { return _row; } }
        public int Prerequisite { get { return _prerequisite; } }
        public string[] Description { get { return _description; } }
        public string Icon { get { return _icon; } }
    }

    public abstract class TalentsBase
    {
        public abstract int[] Data { get; }
        public virtual bool[] GlyphData { get { return null; } }
        public int Specialization { get; set; }
        public string SpecializationName { get { return SpecializationNames[Specialization]; } set { Specialization = Array.IndexOf(SpecializationNames, value); } }
        public abstract string[] SpecializationNames { get; }
        //
        public virtual int TreeStartingIndexes_0 { get { return 0; } }
        public virtual int TreeStartingIndexes_1 { get { return 0; } }
        public virtual int TreeStartingIndexes_2 { get { return 0; } }
        public int[] TreeStartingIndexes { get { return new int[] { TreeStartingIndexes_0, TreeStartingIndexes_1, TreeStartingIndexes_2 }; } }
        public int[] TreeLengths
        {
            get
            {
                return new int[] {
                    TreeStartingIndexes_1,
                    TreeStartingIndexes_2 - TreeStartingIndexes_1,
                    Data.Length - TreeStartingIndexes_2,
                };
            }
        }
        public virtual int GlyphTreeStartingIndexes_0 { get { return 0; } }
        public virtual int GlyphTreeStartingIndexes_1 { get { return 0; } }
        public virtual int GlyphTreeStartingIndexes_2 { get { return 0; } }
        public int[] GlyphTreeStartingIndexes { get { return new int[] { GlyphTreeStartingIndexes_0, GlyphTreeStartingIndexes_1, GlyphTreeStartingIndexes_2 }; } }
        public int[] GlyphTreeLengths
        {
            get
            {
                return new int[] {
                    GlyphTreeStartingIndexes_1,
                    GlyphTreeStartingIndexes_2 - GlyphTreeStartingIndexes_1,
                    GlyphData.Length - GlyphTreeStartingIndexes_2,
                };
            }
        }
        public int[] treeCounts = { -1, -1, -1 };
        public int[] glyphtreeCounts = { -1, -1, -1 };
        //
        public int[] TreeCounts
        {
            get
            {
                if (treeCounts[0] == -1)
                {
                    treeCounts[0] = 0;
                    for (int i = TreeStartingIndexes[0]; i < TreeStartingIndexes[1]; i++)
                    {
                        treeCounts[0] += Data[i];
                    }
                }
                if (treeCounts[1] == -1)
                {
                    treeCounts[1] = 0;
                    for (int i = TreeStartingIndexes[1]; i < TreeStartingIndexes[2]; i++)
                    {
                        treeCounts[1] += Data[i];
                    }
                }
                if (treeCounts[2] == -1)
                {
                    treeCounts[2] = 0;
                    for (int i = TreeStartingIndexes[2]; i < Data.Length; i++)
                    {
                        treeCounts[2] += Data[i];
                    }
                }
                return treeCounts;
            }
            protected set { treeCounts = value; }
        }
        public int[] GlyphTreeCounts
        {
            get
            {
                if (glyphtreeCounts[0] == -1)
                {
                    glyphtreeCounts[0] = 0;
                    for (int i = GlyphTreeStartingIndexes[0]; i < GlyphTreeStartingIndexes[1]; i++)
                    {
                        glyphtreeCounts[0] += GlyphData[i] ? 1 : 0;
                    }
                }
                if (glyphtreeCounts[1] == -1)
                {
                    glyphtreeCounts[1] = 0;
                    for (int i = GlyphTreeStartingIndexes[1]; i < GlyphTreeStartingIndexes[2]; i++)
                    {
                        glyphtreeCounts[1] += GlyphData[i] ? 1 : 0;
                    }
                }
                if (glyphtreeCounts[2] == -1)
                {
                    glyphtreeCounts[2] = 0;
                    for (int i = GlyphTreeStartingIndexes[2]; i < GlyphData.Length; i++)
                    {
                        glyphtreeCounts[2] += GlyphData[i] ? 1 : 0;
                    }
                }
                return glyphtreeCounts;
            }
            protected set { glyphtreeCounts = value; }
        }
        //
        public int HighestTree
        {
            get
            {
                int[] trees = TreeCounts;
                if (trees[0] >= trees[1] && trees[0] >= trees[2]) { return 0; }
                if (trees[1] >= trees[0] && trees[1] >= trees[2]) { return 1; }
                if (trees[2] >= trees[0] && trees[2] >= trees[1]) { return 2; }
                return 0;
            }
        }
        //
        protected void LoadString(string code, int[][] glyphEncodes = null)
        {
            if (string.IsNullOrEmpty(code)) return;
            int[] _data = Data;
            string[] tmp = code.Split('.');
            int offset = 0;
            if (tmp[0].Length == 1)
            {
                Specialization = int.Parse(tmp[0]);
                offset = 1;
            }            
            string talents = tmp[offset];
            if (talents.Length >= _data.Length)
            {
                List<int> data = new List<int>();
                foreach (Char digit in talents)
                    data.Add(int.Parse(digit.ToString()));
                data.CopyTo(0, _data, 0, _data.Length);
            }
            if (tmp.Length > 1 + offset)
            {
                string glyphs = tmp[1 + offset];
                bool[] _glyphData = GlyphData;
                if (_glyphData != null && glyphs.Length == _glyphData.Length)
                {
                    List<bool> data = new List<bool>();
                    foreach (Char digit in glyphs)
                        data.Add(int.Parse(digit.ToString()) == 1);
                    data.CopyTo(_glyphData);
                }
            }
            else if (glyphEncodes != null)
            {
                // This makes it determine the glyphs active from WowHead Glyph IDs
                // (numbered as [0-2][0-5]), see TalentPicker.xaml.cs for details
                bool[] _glyphData = GlyphData;
                if (_glyphData != null)
                {
                    List<GlyphDataAttribute> glyphsInOrder_Prime = new List<GlyphDataAttribute>();
                    List<GlyphDataAttribute> glyphsInOrder_Major = new List<GlyphDataAttribute>();
                    List<GlyphDataAttribute> glyphsInOrder_Minor = new List<GlyphDataAttribute>();
                    foreach (PropertyInfo pi in this.GetType().GetProperties())
                    {
                        GlyphDataAttribute[] glyphDatas = pi.GetCustomAttributes(typeof(GlyphDataAttribute), true) as GlyphDataAttribute[];
                        if (glyphDatas.Length > 0)
                        {
                            if (glyphDatas[0].Type == GlyphType.Prime) { glyphsInOrder_Prime.Add(glyphDatas[0]); }
                            else if (glyphDatas[0].Type == GlyphType.Major) { glyphsInOrder_Major.Add(glyphDatas[0]); }
                            else if (glyphDatas[0].Type == GlyphType.Minor) { glyphsInOrder_Minor.Add(glyphDatas[0]); }
                        }
                    }
                    glyphsInOrder_Prime.Sort(CompareGlyphsById);
                    glyphsInOrder_Major.Sort(CompareGlyphsById);
                    glyphsInOrder_Minor.Sort(CompareGlyphsById);
                    int counter = 0;
                    for (int i = 0; i < glyphsInOrder_Prime.Count; i++)
                    {
                        for (int e = 0; e < 3; e++)
                        {
                            if (counter == glyphEncodes[0][e]) { _glyphData[glyphsInOrder_Prime[i].Index] = true; break; }
                        }
                        // Iterate Counter, but we can't do 6-9 of any 10 block
                        counter++;
                        if (counter == 6 || counter == 16 || counter == 26) { counter -= 6; counter += 10; }
                    }
                }
            }
        }

        private static int CompareGlyphsById(GlyphDataAttribute x, GlyphDataAttribute y)
        {
            if (x == null)
            {
                if (y == null)
                {
                    // If x is null and y is null, they're equal
                    return 0;
                }
                else
                {
                    // If x is null and y is not null, y is greater
                    return -1;
                }
            }
            else
            {
                // If x is not null...
                if (y == null)
                { // ...and y is null, x is greater.
                    return 1;
                }
                else
                {
                    // sort them with ordinary string comparison.
                    return x.SpellID.CompareTo(y.SpellID);
                }
            }
        }
        //
        public override string ToString()
        {
            StringBuilder ret = new StringBuilder();
            ret.Append(Specialization.ToString());
            ret.Append('.');
            foreach (int digit in Data)
                ret.Append(digit.ToString());
            if (GlyphData != null)
            {
                ret.Append('.');
                foreach (bool glyph in GlyphData)
                {
                    ret.Append(glyph ? '1' : '0');
                }
            }
            return ret.ToString();
        }

        public CharacterClass GetClass()
        {
            if (GetType() == typeof(WarlockTalents)) return CharacterClass.Warlock;
            if (GetType() == typeof(MageTalents)) return CharacterClass.Mage;
            if (GetType() == typeof(PriestTalents)) return CharacterClass.Priest;
            if (GetType() == typeof(DruidTalents)) return CharacterClass.Druid;
            if (GetType() == typeof(RogueTalents)) return CharacterClass.Rogue;
            if (GetType() == typeof(HunterTalents)) return CharacterClass.Hunter;
            if (GetType() == typeof(ShamanTalents)) return CharacterClass.Shaman;
            if (GetType() == typeof(DeathKnightTalents)) return CharacterClass.DeathKnight;
            if (GetType() == typeof(PaladinTalents)) return CharacterClass.Paladin;
            return CharacterClass.Warrior;
        }

        public abstract TalentsBase Clone();
    }

    public partial class WarriorTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            WarriorTalents clone = (WarriorTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public WarriorTalents() { }
        public WarriorTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Arms",@"Fury",@"Protection"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Warrior
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// You can Charge every 12 sec instead of every 20 sec.
        /// </summary>
        [TalentData(index: 0, name: "Juggernaut", maxPoints: 1, icon: "ability_warrior_bullrush",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"You can Charge every 12 sec instead of every 20 sec.",})]
        public int Juggernaut { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// You can use Charge twice before incurring its cooldown.
        /// </summary>
        [TalentData(index: 1, name: "Double Time ", maxPoints: 1, icon: "inv_misc_horn_04",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"You can use Charge twice before incurring its cooldown.",})]
        public int DoubleTime { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// Your Charge also knocks a target to the ground and stuns it for 3 sec.
        /// </summary>
        [TalentData(index: 2, name: "Warbringer", maxPoints: 1, icon: "ability_warrior_warbringer",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Your Charge also knocks a target to the ground and stuns it for 3 sec.",})]
        public int Warbringer { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// Instantly heals you for 15% of your total health, and an additional 15% over 15 sec.\n\n\n\nCan only be used while Enraged. Can be used while stunned.
        /// </summary>
        [TalentData(index: 3, name: "Enraged Regeneration", maxPoints: 1, icon: "ability_warrior_focusedrage",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"Instantly heals you for 15% of your total health, and an additional 15% over 15 sec.



Can only be used while Enraged. Can be used while stunned.",})]
        public int EnragedRegeneration { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Whenever you are struck by a Stun or Immobilize effect, you generate 20 Rage over 10 sec.\n\n\n\nWhenever you take direct damage, you have a 10% chance to regenerate 10% of your total health over 10 sec.
        /// </summary>
        [TalentData(index: 4, name: "Second Wind", maxPoints: 1, icon: "ability_hunter_harass",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Whenever you are struck by a Stun or Immobilize effect, you generate 20 Rage over 10 sec.



Whenever you take direct damage, you have a 10% chance to regenerate 10% of your total health over 10 sec.",})]
        public int SecondWind { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Instantly attack the target causing 31 damage and healing you for 10% of your maximum health.\n\n\n\nIf used within 20 sec after you kill an enemy that yields experience or honor, heals for 20% of your maximum health.\n\n\n\nReplaces Victory Rush.
        /// </summary>
        [TalentData(index: 5, name: "Impending Victory", maxPoints: 1, icon: "ability_warrior_devastate",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Instantly attack the target causing 31 damage and healing you for 10% of your maximum health.



If used within 20 sec after you kill an enemy that yields experience or honor, heals for 20% of your maximum health.



Replaces Victory Rush.",})]
        public int ImpendingVictory { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// Causes all enemies within 20 yards that are snared to become rooted for 5 sec.
        /// </summary>
        [TalentData(index: 6, name: "Staggering Shout", maxPoints: 1, icon: "ability_bullrush",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"Causes all enemies within 20 yards that are snared to become rooted for 5 sec.",})]
        public int StaggeringShout { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Frightens all enemies within 20 yards, reducing their movement speed by 50% for 6 sec.
        /// </summary>
        [TalentData(index: 7, name: "Piercing Howl", maxPoints: 1, icon: "spell_shadow_deathscream",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Frightens all enemies within 20 yards, reducing their movement speed by 50% for 6 sec.",})]
        public int PiercingHowl { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Interrupts all spellcasting within 10 yards and prevents any spell in that school from being cast for 4 sec.
        /// </summary>
        [TalentData(index: 8, name: "Disrupting Shout", maxPoints: 1, icon: "ability_warrior_warcry",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Interrupts all spellcasting within 10 yards and prevents any spell in that school from being cast for 4 sec.",})]
        public int DisruptingShout { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// You become a whirling storm of destructive force, striking all targets within 8 yards for 75% weapon damage every 1 sec for 6 sec.\n\n\n\nDuring a Bladestorm, you are immune to movement impairing and loss of control effects, but can be Disarmed, and you can only perform shout abilities.
        /// </summary>
        [TalentData(index: 9, name: "Bladestorm", maxPoints: 1, icon: "ability_warrior_bladestorm",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"You become a whirling storm of destructive force, striking all targets within 8 yards for 75% weapon damage every 1 sec for 6 sec.



During a Bladestorm, you are immune to movement impairing and loss of control effects, but can be Disarmed, and you can only perform shout abilities.",})]
        public int Bladestorm { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// Sends a wave of force in front of you, causing 40 damage and stunning all enemy targets within 10 yards in a frontal cone for 4 sec.
        /// </summary>
        [TalentData(index: 10, name: "Shockwave", maxPoints: 1, icon: "ability_warrior_shockwave",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"Sends a wave of force in front of you, causing 40 damage and stunning all enemy targets within 10 yards in a frontal cone for 4 sec.",})]
        public int Shockwave { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// You transform into an unstoppable colossus for 10 sec, which increases your damage dealt by 20% and causes your attacks to generate extra rage. \n\n\n\nWhile transformed you are immune to movement impairing effects.
        /// </summary>
        [TalentData(index: 11, name: "Avatar", maxPoints: 1, icon: "ability_racial_avatar",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"You transform into an unstoppable colossus for 10 sec, which increases your damage dealt by 20% and causes your attacks to generate extra rage. 



While transformed you are immune to movement impairing effects.",})]
        public int Avatar { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Your Spell Reflection protects you from an additional spell and protects party and raid members within 20 yards from a single spell for 5 sec.
        /// </summary>
        [TalentData(index: 12, name: "Mass Spell Reflection", maxPoints: 1, icon: "ability_warrior_shieldbreak",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Your Spell Reflection protects you from an additional spell and protects party and raid members within 20 yards from a single spell for 5 sec.",})]
        public int MassSpellReflection { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// Run at high speed towards a party or raid member, removing all movement effects upon you, intercepting the next melee or ranged attack made against them and reducing their damage taken by 20% for 6 sec.\n\n\n\nReplaces Intervene.
        /// </summary>
        [TalentData(index: 13, name: "Safeguard", maxPoints: 1, icon: "ability_warrior_safeguard",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"Run at high speed towards a party or raid member, removing all movement effects upon you, intercepting the next melee or ranged attack made against them and reducing their damage taken by 20% for 6 sec.



Replaces Intervene.",})]
        public int Safeguard { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Focus your protective gaze on a party or raid member, transfering 30% of damage taken to you for 12 sec.\n\n\n\nDuring the duration of Vigilance, your Taunt has no cooldown and attacks against the target cause you to become Enraged for 6 sec.
        /// </summary>
        [TalentData(index: 14, name: "Vigilance", maxPoints: 1, icon: "ability_warrior_stalwartprotector",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Focus your protective gaze on a party or raid member, transfering 30% of damage taken to you for 12 sec.



During the duration of Vigilance, your Taunt has no cooldown and attacks against the target cause you to become Enraged for 6 sec.",})]
        public int Vigilance { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// You enter a battle trance, causing your next 3 Heroic Strike or Cleave attacks to cost no rage and cause 50% extra damage. Lasts 15 sec.
        /// </summary>
        [TalentData(index: 15, name: "Deadly Calm", maxPoints: 1, icon: "achievement_boss_kingymiron",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"You enter a battle trance, causing your next 3 Heroic Strike or Cleave attacks to cost no rage and cause 50% extra damage. Lasts 15 sec.",})]
        public int DeadlyCalm { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// You carve up your opponent with your weapons.  For the next 12 sec, your special attacks cause the target to bleed for an additional 30% damage over 6 sec.
        /// </summary>
        [TalentData(index: 16, name: "Bloodbath", maxPoints: 1, icon: "ability_warrior_bloodbath",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"You carve up your opponent with your weapons.  For the next 12 sec, your special attacks cause the target to bleed for an additional 30% damage over 6 sec.",})]
        public int Bloodbath { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// Hurl your weapon at an enemy causing 50% weapon damage and stunning the target for 3 sec.  Deals an additional 300% weapon damage to targets that are permanently immune to stuns.  \n\n\n\nReplaces Heroic Throw.
        /// </summary>
        [TalentData(index: 17, name: "Storm Bolt", maxPoints: 1, icon: "ability_thunderbolt",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"Hurl your weapon at an enemy causing 50% weapon damage and stunning the target for 3 sec.  Deals an additional 300% weapon damage to targets that are permanently immune to stuns.  



Replaces Heroic Throw.",})]
        public int StormBolt { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class PaladinTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            PaladinTalents clone = (PaladinTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public PaladinTalents() { }
        public PaladinTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Holy",@"Protection",@"Retribution"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Paladin
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Increases your movement speed by 70% for 8 sec.
        /// </summary>
        [TalentData(index: 0, name: "Speed of Light", maxPoints: 1, icon: "ability_paladin_speedoflight",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Increases your movement speed by 70% for 8 sec.",})]
        public int SpeedOfLight { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// A successful Judgment increases your movement speed by 45% for 3 sec.
        /// </summary>
        [TalentData(index: 1, name: "Long Arm of the Law", maxPoints: 1, icon: "ability_paladin_longarmofthelaw",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"A successful Judgment increases your movement speed by 45% for 3 sec.",})]
        public int LongArmOfTheLaw { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// You gain 15% movement speed at all times, plus an additional 5% movement speed for each current charge of Holy Power up to 3.
        /// </summary>
        [TalentData(index: 2, name: "Pursuit of Justice", maxPoints: 1, icon: "spell_holy_persuitofjustice",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"You gain 15% movement speed at all times, plus an additional 5% movement speed for each current charge of Holy Power up to 3.",})]
        public int PursuitOfJustice { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// Stuns the target for 6 sec.\n\n\n\nReplaces Hammer of Justice.
        /// </summary>
        [TalentData(index: 3, name: "Fist of Justice", maxPoints: 1, icon: "spell_holy_fistofjustice",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"Stuns the target for 6 sec.



Replaces Hammer of Justice.",})]
        public int FistOfJustice { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Puts the enemy target in a state of meditation, incapacitating them for up to 60 sec.  Any damage from sources other than Censure will awaken the target.  Usable against Demons, Dragonkin, Giants, Humanoids and Undead.
        /// </summary>
        [TalentData(index: 4, name: "Repentance", maxPoints: 1, icon: "spell_holy_prayerofhealing",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Puts the enemy target in a state of meditation, incapacitating them for up to 60 sec.  Any damage from sources other than Censure will awaken the target.  Usable against Demons, Dragonkin, Giants, Humanoids and Undead.",})]
        public int Repentance { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Your Judgment hits fill your target with doubt and remorse, reducing movement speed by 50% for 12 sec.
        /// </summary>
        [TalentData(index: 5, name: "Burden of Guilt", maxPoints: 1, icon: "achievement_bg_topdps",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Your Judgment hits fill your target with doubt and remorse, reducing movement speed by 50% for 12 sec.",})]
        public int BurdenOfGuilt { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// Your successful Judgments reduce the cast time of your next Flash of Light by 35% per stack and improves its effectiveness by 35% per stack when used to heal others. Stacks up to 3 times.
        /// </summary>
        [TalentData(index: 6, name: "Selfless Healer", maxPoints: 1, icon: "ability_paladin_gaurdedbythelight",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"Your successful Judgments reduce the cast time of your next Flash of Light by 35% per stack and improves its effectiveness by 35% per stack when used to heal others. Stacks up to 3 times.",})]
        public int SelflessHealer { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Consumes up to 3 Holy Power to place a protective Holy flame on a friendly target, which heals them for (5538+49.0% of SP) and an additional (508+5.9% of SP) every 3 sec for 30 sec.  Healing increased per charge of Holy Power.\n\n\n\nReplaces Word of Glory.
        /// </summary>
        [TalentData(index: 7, name: "Eternal Flame", maxPoints: 1, icon: "inv_torch_thrown",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Consumes up to 3 Holy Power to place a protective Holy flame on a friendly target, which heals them for (5538+49.0% of SP) and an additional (508+5.9% of SP) every 3 sec for 30 sec.  Healing increased per charge of Holy Power.



Replaces Word of Glory.",})]
        public int EternalFlame { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Protects the target with a shield of Holy Light for 30 sec.  The shield absorbs up to (30+117% of SP) damage every 6 sec.\n\n\n\nCan be active only on one target at a time.
        /// </summary>
        [TalentData(index: 8, name: "Sacred Shield", maxPoints: 1, icon: "ability_paladin_blessedmending",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Protects the target with a shield of Holy Light for 30 sec.  The shield absorbs up to (30+117% of SP) damage every 6 sec.



Can be active only on one target at a time.",})]
        public int SacredShield { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Places a Hand on the friendly target, reducing the damage of harmful periodic effects by 70% for 6 sec. Players may only have one Hand on them per Paladin at any one time.
        /// </summary>
        [TalentData(index: 9, name: "Hand of Purity", maxPoints: 1, icon: "spell_holy_sealofwisdom",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Places a Hand on the friendly target, reducing the damage of harmful periodic effects by 70% for 6 sec. Players may only have one Hand on them per Paladin at any one time.",})]
        public int HandOfPurity { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// When your Divine Shield, Divine Protection or Lay on Hands are on cooldown, spending Holy Power will reduce the remaining cooldown by 1% per Holy Power spent, up to a maximum of 50% reduction.
        /// </summary>
        [TalentData(index: 10, name: "Unbreakable Spirit", maxPoints: 1, icon: "spell_holy_unyieldingfaith",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"When your Divine Shield, Divine Protection or Lay on Hands are on cooldown, spending Holy Power will reduce the remaining cooldown by 1% per Holy Power spent, up to a maximum of 50% reduction.",})]
        public int UnbreakableSpirit { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// You can use Hand of Freedom, Hand of Protection, Hand of Sacrifice and Hand of Salvation twice each before incurring their cooldowns.
        /// </summary>
        [TalentData(index: 11, name: "Clemency", maxPoints: 1, icon: "ability_paladin_clemency",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"You can use Hand of Freedom, Hand of Protection, Hand of Sacrifice and Hand of Salvation twice each before incurring their cooldowns.",})]
        public int Clemency { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Abilities that generate Holy Power will deal 30% additional damage and healing, and generate 3 charges of Holy Power for the next 18 sec.
        /// </summary>
        [TalentData(index: 12, name: "Holy Avenger", maxPoints: 1, icon: "ability_paladin_holyavenger",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Abilities that generate Holy Power will deal 30% additional damage and healing, and generate 3 charges of Holy Power for the next 18 sec.",})]
        public int HolyAvenger { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// Avenging Wrath lasts 50% longer and grants more frequent access to one of your abilities while it lasts.\n\nHoly\nReduces the cooldown of Holy Shock by 50%.\n\nProtection\nReduces the cooldown of Judgment by 50%. Avenging Wrath also increases healing received by 20%.\n\nRetribution\nReduces the cooldown of Hammer of Wrath by 50%.
        /// </summary>
        [TalentData(index: 13, name: "Sanctified Wrath", maxPoints: 1, icon: "ability_paladin_sanctifiedwrath",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"Avenging Wrath lasts 50% longer and grants more frequent access to one of your abilities while it lasts.

Holy
Reduces the cooldown of Holy Shock by 50%.

Protection
Reduces the cooldown of Judgment by 50%. Avenging Wrath also increases healing received by 20%.

Retribution
Reduces the cooldown of Hammer of Wrath by 50%.",})]
        public int SanctifiedWrath { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Abilities that cost Holy Power have a 25% chance to cause the Divine Purpose effect. \n\n\n\nDivine Purpose - Your next Holy Power ability will consume no Holy Power and cast as if 3 Holy Power were consumed.
        /// </summary>
        [TalentData(index: 14, name: "Divine Purpose", maxPoints: 1, icon: "spell_holy_divinepurpose",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Abilities that cost Holy Power have a 25% chance to cause the Divine Purpose effect. 



Divine Purpose - Your next Holy Power ability will consume no Holy Power and cast as if 3 Holy Power were consumed.",})]
        public int DivinePurpose { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// Sends a beam of light toward a target, turning them into a prism for Holy energy.\n\n\n\nIf an enemy is the prism, they take (16136+142.8% of SP) Holy damage and radiate (10882+96.2% of SP) healing to 5 nearby allies within 10 yards.\n\n\n\nIf an ally is the prism, they are healed for (16136+142.8% of SP) and radiate (10882+96.2% of SP) Holy damage to 5 nearby enemies within 10 yards.
        /// </summary>
        [TalentData(index: 15, name: "Holy Prism", maxPoints: 1, icon: "paladin_icon_speedoflight",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"Sends a beam of light toward a target, turning them into a prism for Holy energy.



If an enemy is the prism, they take (16136+142.8% of SP) Holy damage and radiate (10882+96.2% of SP) healing to 5 nearby allies within 10 yards.



If an ally is the prism, they are healed for (16136+142.8% of SP) and radiate (10882+96.2% of SP) Holy damage to 5 nearby enemies within 10 yards.",})]
        public int HolyPrism { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// Hurl a Light-infused hammer into the ground, where it will blast a 10 yard area with Arcing Light for 16 sec.\n\n\nArcing Light\nDeals (3630+32.1% of SP) Holy damage to enemies within the area and 0 healing to allies within the area every 2 sec.
        /// </summary>
        [TalentData(index: 16, name: "Light's Hammer", maxPoints: 1, icon: "inv_mace_47",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"Hurl a Light-infused hammer into the ground, where it will blast a 10 yard area with Arcing Light for 16 sec.


Arcing Light
Deals (3630+32.1% of SP) Holy damage to enemies within the area and 0 healing to allies within the area every 2 sec.",})]
        public int LightsHammer { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// A hammer slowly falls from the sky, causing increasing Holy damage to the designated target for the next 10 seconds and culminating in a final burst of damage.\n\n\n\nStay of Execution\n\nIf used on friendly targets, the falling hammer heals the target for the next 10 seconds and culminating in a final burst of healing.
        /// </summary>
        [TalentData(index: 17, name: "Execution Sentence", maxPoints: 1, icon: "inv_helmet_plate_pvppaladin_d_01",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"A hammer slowly falls from the sky, causing increasing Holy damage to the designated target for the next 10 seconds and culminating in a final burst of damage.



Stay of Execution

If used on friendly targets, the falling hammer heals the target for the next 10 seconds and culminating in a final burst of healing.",})]
        public int ExecutionSentence { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class HunterTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            HunterTalents clone = (HunterTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public HunterTalents() { }
        public HunterTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Beast Mastery",@"Marksmanship",@"Survival"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Hunter
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Your movement speed is increased by 60% for 4 sec after you use Disengage.
        /// </summary>
        [TalentData(index: 0, name: "Posthaste", maxPoints: 1, icon: "ability_hunter_posthaste",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Your movement speed is increased by 60% for 4 sec after you use Disengage.",})]
        public int Posthaste { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Increases your chance to dodge attacks and resist spells by 100% for 3 sec when you use Disengage.
        /// </summary>
        [TalentData(index: 1, name: "Narrow Escape", maxPoints: 1, icon: "inv_misc_volatileair",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"When you Disengage, you also activate a web trap which encases all targets within 8 yards in sticky webs, preventing movement for 8 sec.",})]
        public int NarrowEscape { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// When you Disengage, you are instantly healed for 15% of your total health.
        /// </summary>
        [TalentData(index: 2, name: "Crouching Tiger, Hidden Chimera", maxPoints: 1, icon: "ability_hunter_pet_chimerae",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Reduces the cooldown of Disengage by 10 sec, and the cooldown of Deterrence by 60 sec.",})]
        public int CrouchingTigerHiddenChimera { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// A shot that silences the target and interrupts spellcasting for 3 sec.
        /// </summary>
        [TalentData(index: 3, name: "Silencing Shot", maxPoints: 1, icon: "ability_theblackarrow",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"A shot that silences the target and interrupts spellcasting for 3 sec.",})]
        public int SilencingShot { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// A stinging shot that puts the target to sleep for 30 sec.  Any damage will cancel the effect.  When the target wakes up, the Sting causes 2,829 Nature damage over 6 sec.  Only one Sting per Hunter can be active on the target at a time.
        /// </summary>
        [TalentData(index: 4, name: "Wyvern Sting", maxPoints: 1, icon: "inv_spear_02",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"A stinging shot that puts the target to sleep for 30 sec.  Any damage will cancel the effect.  When the target wakes up, the Sting causes 2,829 Nature damage over 6 sec.  Only one Sting per Hunter can be active on the target at a time.",})]
        public int WyvernSting { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Command your pet to intimidate the target, causing a high amount of threat and stunning the target for 3 sec. Lasts 15 sec.
        /// </summary>
        [TalentData(index: 5, name: "Binding Shot", maxPoints: 1, icon: "spell_shaman_bindelemental",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"You fire a magical projectile, tethering the enemy and any other enemies within 5 yards of the landing arrow for (11 sec) sec.  If targets move 5 yards from the arrow they are stunned for 5 sec (3 sec PvP) and will be immune to the effects of Binding Shot for 10 sec.",})]
        public int BindingShot { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// Whenever you are hit by a melee attack, the cooldown of your Disengage is instantly reduced by 4 sec.\n\n\n\nWhenever you are hit by a ranged attack or spell, the cooldown of your Deterrence is instantly reduced by 8 sec.\n\n\n\nThese effects have a 2 sec cooldown.
        /// </summary>
        [TalentData(index: 6, name: "Exhilaration", maxPoints: 1, icon: "ability_hunter_pet_chimera",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"Instantly heals you for 30% and your pet for 100% of total health.",})]
        public int Exhilaration { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Your Aspect of the Hawk now also reduces all direct damage taken by 15%.
        /// </summary>
        [TalentData(index: 7, name: "Aspect of the Iron Hawk", maxPoints: 1, icon: "ability_hunter_aspectoftheironhawk",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Your Aspect of the Hawk now also reduces all direct damage taken by 15%.",})]
        public int AspectOfTheIronHawk { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// While your pet is active, you and your pet will regenerate 2% of total health every 5 sec.
        /// </summary>
        [TalentData(index: 8, name: "Spirit Bond", maxPoints: 1, icon: "ability_druid_demoralizingroar",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"While your pet is active, you and your pet will regenerate 2% of total health every 5 sec.",})]
        public int SpiritBond { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Instantly restores 50 Focus to you and your pet.
        /// </summary>
        [TalentData(index: 9, name: "Fervor", maxPoints: 1, icon: "ability_hunter_aspectoftheviper",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Instantly restores 50 Focus to you and your pet.",})]
        public int Fervor { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// When activated, this ability immediately finishes the cooldown on all Hunter abilities.
        /// </summary>
        [TalentData(index: 10, name: "Dire Beast", maxPoints: 1, icon: "ability_hunter_readiness",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"Summons a powerful wild beast to attack your target for 15 sec.  Each time the beast deals damage, you will gain 5 focus.",})]
        public int DireBeast { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// You have a 15% chance when you fire a shot that costs Focus to instantly regain 100% of the Focus cost of the shot.
        /// </summary>
        [TalentData(index: 11, name: "Thrill of the Hunt", maxPoints: 1, icon: "ability_hunter_thrillofthehunt",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"You have a 30% chance when you fire a shot that costs Focus or Kill Command to instantly regain 100% of the Focus cost of the shot.",})]
        public int ThrillOfTheHunt { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Crow murder..
        /// </summary>
        [TalentData(index: 12, name: "A Murder of Crows", maxPoints: 1, icon: "ability_hunter_glacialtrap",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Summons a flock of crows to attack your target over the next 30 sec.  If used on a target below 20% health, the cooldown is reduced to 60 seconds.",})]
        public int MurderOfCrows { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// Blink strike
        /// </summary>
        [TalentData(index: 13, name: "Blink Strike", maxPoints: 1, icon: "ability_hunter_blackicetrap",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"Causes your pet to instantly teleport behind an enemy target up to 40 yards away from your pet and inflict 600% normal damage.",})]
        public int BlinkStrike { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Lynx Rush
        /// </summary>
        [TalentData(index: 14, name: "Lynx Rush", maxPoints: 1, icon: "trade_brewpoison",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Your pet rapidly charges from target to target, attacking 9 times over 4 sec, dealing 200% of its normal attack damage to each target.  

The pet must be within 10 yards of the target to Lynx Rush.",})]
        public int LynxRush { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// You hurl two glaives in front of you 30 yards, dealing 1,X damage to all enemies and reducing their movement speed by 50%. \n\n\n\nThe Glaives will return back to you, also dealing damage and snaring targets they hit.\n\n\n\nIf Glaive Toss hits at least 2 enemies in both directions, the cooldown is reset.
        /// </summary>
        [TalentData(index: 15, name: "Glaive Toss", maxPoints: 1, icon: "ability_upgrademoonglaive",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"You hurl two glaives in front of you 30 yards, dealing 1,X damage to all enemies and reducing their movement speed by 50%. 



The Glaives will return back to you, also dealing damage and snaring targets they hit.



If Glaive Toss hits at least 2 enemies in both directions, the cooldown is reset.",})]
        public int GlaiveToss { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// You wind up a powerful shot, dealing 1,X damage to all targets in front of you within 20 yards (width).\n\n\n\nThe damage done is increased on targets further away:\n\n\n\n15-30 yards: Double damage, Stunned 1 sec\n\n30-50 yards: Tripple damage, Stunned 2 sec
        /// </summary>
        [TalentData(index: 16, name: "Powershot", maxPoints: 1, icon: "ability_hunter_focusfire",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"You wind up a powerful shot, dealing 1,X damage to all targets in front of you within 20 yards (width).



The damage done is increased on targets further away:



15-30 yards: Double damage, Stunned 1 sec

30-50 yards: Tripple damage, Stunned 2 sec",})]
        public int Powershot { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// You fire a magical projectile, tethering the enemy and any other enemies within 10 yards to the landing arrow. Increases all damage they recieve from you by 15%. \n\n\n\nIf they move 15 yards from the arrow they are stunned for 10 sec (5 sec PvP).
        /// </summary>
        [TalentData(index: 17, name: "Barrage", maxPoints: 1, icon: "spell_shaman_bindelemental",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"Rapidly fire a spray of shots forward for 3 sec, dealing a total of 640% weapon damage to the enemy target and an average of 320% weapon damage to each other enemy target in front of you.",})]
        public int Barrage { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class RogueTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            RogueTalents clone = (RogueTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public RogueTalents() { }
        public RogueTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Assasination",@"Combat",@"Subtlety"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Rogue
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Increases your speed while stealthed by 20%.
        /// </summary>
        [TalentData(index: 0, name: "Nightstalker", maxPoints: 1, icon: "ability_stealth",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Increases your speed while stealthed by 20%.",})]
        public int Nightstalker { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Your Stealth breaks 3 sec after dealing or receiving hostile actions, rather than doing so immediately.
        /// </summary>
        [TalentData(index: 1, name: "Subterfuge", maxPoints: 1, icon: "rogue_subterfuge",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"Your Stealth breaks 3 sec after dealing or receiving hostile actions, rather than doing so immediately.",})]
        public int Subterfuge { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// Abilities no longer cost Energy while you are stealthed.
        /// </summary>
        [TalentData(index: 2, name: "Shadow Focus", maxPoints: 1, icon: "rogue_shadowfocus",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Abilities no longer cost Energy while you are stealthed.",})]
        public int ShadowFocus { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// Finishing move that interrupts spellcasting and reduces the movement speed of the target by 50% for 6 sec.  Damage dealt:\n\n   1 point  : 396 - 439 damage\n\n   2 points: 646 - 689 damage\n\n   3 points: 896 - 939 damage\n\n   4 points: 1146 - 1189 damage\n\n   5 points: 1396 - 1439 damage
        /// </summary>
        [TalentData(index: 3, name: "Deadly Throw", maxPoints: 1, icon: "inv_throwingknife_06",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"Finishing move that interrupts spellcasting and reduces the movement speed of the target by 50% for 6 sec.  Damage dealt:

   1 point  : 396 - 439 damage

   2 points: 646 - 689 damage

   3 points: 896 - 939 damage

   4 points: 1146 - 1189 damage

   5 points: 1396 - 1439 damage",})]
        public int DeadlyThrow { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// A successful Kidney Shot or Cheap Shot also reduces the damage dealt by the target by 50% for 6 seconds after the effect fades.
        /// </summary>
        [TalentData(index: 4, name: "Nerve Strike", maxPoints: 1, icon: "rogue_nerve_strike",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"A successful Kidney Shot or Cheap Shot also reduces the damage dealt by the target by 50% for 6 seconds after the effect fades.",})]
        public int NerveStrike { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Enter into a state of heightened awareness, deflecting enemy weapon strikes with increasing effectiveness.  Successive attacks will deal 10% less damage per application, stacking 5 times.\n\n\n\nLasts for 20 sec, but if 10 sec elapse without any incoming weapon strikes, this state will end.
        /// </summary>
        [TalentData(index: 5, name: "Combat Readiness", maxPoints: 1, icon: "ability_rogue_combatreadiness",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Enter into a state of heightened awareness, deflecting enemy weapon strikes with increasing effectiveness.  Successive attacks will deal 10% less damage per application, stacking 5 times.



Lasts for 20 sec, but if 10 sec elapse without any incoming weapon strikes, this state will end.",})]
        public int CombatReadiness { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// An attack that would otherwise be fatal will instead reduce you no lower than 10% of your maximum health, and damage taken will be reduced by 80% for 3 sec.  This effect cannot occur more than once per 90 seconds.
        /// </summary>
        [TalentData(index: 6, name: "Cheat Death", maxPoints: 1, icon: "ability_rogue_cheatdeath",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"An attack that would otherwise be fatal will instead reduce you no lower than 10% of your maximum health, and damage taken will be reduced by 80% for 3 sec.  This effect cannot occur more than once per 90 seconds.",})]
        public int CheatDeath { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Coats your weapons with a Non-Lethal Poison that lasts for 1 hour.  Your melee attacks have a 50% chance to poison the target, and all your subsequent weapon strikes against the poisoned target will heal you for 10% of damage dealt.
        /// </summary>
        [TalentData(index: 7, name: "Leeching Poison", maxPoints: 1, icon: "rogue_leeching_poison",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Coats your weapons with a Non-Lethal Poison that lasts for 1 hour.  Your melee attacks have a 50% chance to poison the target, and all your subsequent weapon strikes against the poisoned target will heal you for 10% of damage dealt.",})]
        public int LeechingPoison { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Your Feint ability also reduces all damage taken by 30% for 5 sec.
        /// </summary>
        [TalentData(index: 8, name: "Elusiveness", maxPoints: 1, icon: "ability_rogue_unfairadvantage",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Your Feint ability also reduces all damage taken by 30% for 5 sec.",})]
        public int Elusiveness { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// When activated, this ability immediately finishes the cooldown on your Sprint, Vanish, Cloak of Shadows, Evasion, Dismantle, and Smoke Bomb abilities.
        /// </summary>
        [TalentData(index: 9, name: "Preparation", maxPoints: 1, icon: "ability_rogue_preparation",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"When activated, this ability immediately finishes the cooldown on your Sprint, Vanish, Cloak of Shadows, Evasion, Dismantle, and Smoke Bomb abilities.",})]
        public int Preparation { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// Step through the shadows and appear behind an enemy target.
        /// </summary>
        [TalentData(index: 10, name: "Shadowstep", maxPoints: 1, icon: "ability_rogue_shadowstep",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"Step through the shadows and appear behind an enemy target.",})]
        public int Shadowstep { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// Increases movement speed by 70% for 4 sec.  If you are afflicted by any movement-impairing effects, activating this ability will instead remove any such effects and grant immunity to their re-application for 4 sec.
        /// </summary>
        [TalentData(index: 11, name: "Burst of Speed", maxPoints: 1, icon: "rogue_burstofspeed",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"Increases movement speed by 70% for 4 sec.  If you are afflicted by any movement-impairing effects, activating this ability will instead remove any such effects and grant immunity to their re-application for 4 sec.",})]
        public int BurstOfSpeed { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Whenever you apply one of your Non-Lethal poisons to a target, you also apply Crippling Poison.
        /// </summary>
        [TalentData(index: 12, name: "Deadly Brew", maxPoints: 1, icon: "ability_rogue_deadlybrew",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Whenever you apply one of your Non-Lethal poisons to a target, you also apply Crippling Poison.",})]
        public int DeadlyBrew { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// Coats your weapons with a Non-Lethal Poison that lasts for 1 hour.  Each strike has a 20% chance of poisoning the enemy for 15 sec.  Stacks up to 5 times on a single target, and upon a fifth application, the enemy will be stunned for 4 seconds.
        /// </summary>
        [TalentData(index: 13, name: "Paralytic Poison", maxPoints: 1, icon: "rogue_paralytic_poison",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"Coats your weapons with a Non-Lethal Poison that lasts for 1 hour.  Each strike has a 20% chance of poisoning the enemy for 15 sec.  Stacks up to 5 times on a single target, and upon a fifth application, the enemy will be stunned for 4 seconds.",})]
        public int ParalyticPoison { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Your Gouge and Blind no longer have an Energy cost, and no longer break from damage dealt by your Poison and Bleed effects.
        /// </summary>
        [TalentData(index: 14, name: "Dirty Tricks", maxPoints: 1, icon: "ability_rogue_dirtydeeds",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Your Gouge and Blind no longer have an Energy cost, and no longer break from damage dealt by your Poison and Bleed effects.",})]
        public int DirtyTricks { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// A ranged attack that deals 1,179 Physical damage to an enemy target. Generates 1 combo point.
        /// </summary>
        [TalentData(index: 15, name: "Shuriken Toss", maxPoints: 1, icon: "inv_throwingknife_07",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"A ranged attack that deals 1,179 Physical damage to an enemy target. Generates 1 combo point.",})]
        public int ShurikenToss { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// Your Redirect ability now has no cooldown.
        /// </summary>
        [TalentData(index: 16, name: "Versatility", maxPoints: 1, icon: "ability_rogue_unfairadvantage",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"Your Redirect ability now has no cooldown.",})]
        public int Versatility { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// When one of your attacks generates a combo point on a target that already has five combo points, you gain an Anticipation charge, up to a maximum of 5.  When you perform an offensive finishing move on an enemy, any Anticipation charges are consumed to grant you an equal number of combo points on that target.
        /// </summary>
        [TalentData(index: 17, name: "Anticipation", maxPoints: 1, icon: "ability_rogue_slaughterfromtheshadows",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"When one of your attacks generates a combo point on a target that already has five combo points, you gain an Anticipation charge, up to a maximum of 5.  When you perform an offensive finishing move on an enemy, any Anticipation charges are consumed to grant you an equal number of combo points on that target.",})]
        public int Anticipation { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class PriestTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            PriestTalents clone = (PriestTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public PriestTalents() { }
        public PriestTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Discipline",@"Holy",@"Shadow"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Priest
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Summons Shadowy tendrils out of the ground, rooting all targets within 8 yards for 20 sec. Killing the tendril will cancel the effect.
        /// </summary>
        [TalentData(index: 0, name: "Void Tendrils", maxPoints: 1, icon: "spell_priest_voidtendrils",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Summons Shadowy tendrils out of the ground, rooting all targets within 8 yards for 20 sec. Killing the tendril will cancel the effect.",})]
        public int VoidTendrils { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Summons a Psyfiend that stands in place. The Psyfiend casts a Psychic Scream on a nearby enemy within 30 yards every 1.5 sec., preferring anything attacking the Priest.\n\n\n\nPsychic Scream causes enemies to flee for 1 min. Damage caused may interrupt the effect.
        /// </summary>
        [TalentData(index: 1, name: "Psyfiend", maxPoints: 1, icon: "spell_priest_psyfiend",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"Summons a Psyfiend that stands in place. The Psyfiend casts a Psychic Scream on a nearby enemy within 30 yards every 1.5 sec., preferring anything attacking the Priest.



Psychic Scream causes enemies to flee for 1 min. Damage caused may interrupt the effect.",})]
        public int Psyfiend { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// The caster lets out a psychic scream, causing 5 enemies within 8 yards to flee for 8 sec.  Damage caused may interrupt the effect.
        /// </summary>
        [TalentData(index: 2, name: "Psychic Scream", maxPoints: 1, icon: "spell_shadow_psychicscream",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"The caster lets out a psychic scream, causing 5 enemies within 8 yards to flee for 8 sec.  Damage caused may interrupt the effect.",})]
        public int PsychicScream { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// When you cast Power Word: Shield or Leap of Faith, you increase the target's movement speed by 60% for 4 sec.
        /// </summary>
        [TalentData(index: 3, name: "Body and Soul", maxPoints: 1, icon: "spell_holy_symbolofhope",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"When you cast Power Word: Shield or Leap of Faith, you increase the target's movement speed by 60% for 4 sec.",})]
        public int BodyAndSoul { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Increases your movement speed while Levitating by 25%.
        /// </summary>
        [TalentData(index: 4, name: "Path of the Devout", maxPoints: 1, icon: "spell_priest_pathofdevout",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Increases your movement speed while Levitating by 25%.",})]
        public int PathOfTheDevout { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Anytime you Fade, you remove all movement impairing effects from yourself and your movement speed will be unhindered for 3 sec.
        /// </summary>
        [TalentData(index: 5, name: "Phantasm", maxPoints: 1, icon: "spell_shadow_twistedfaith",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Anytime you Fade, you remove all movement impairing effects from yourself and your movement speed will be unhindered for 3 sec.",})]
        public int Phantasm { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// Surge of Light (Caster form)\n\nYou have a 15% chance when you Smite, Heal, Flash Heal, Binding Heal or Greater Heal to cause your next Flash Heal to be instant cast and have no mana cost.\n\n\n\nSurge of Darkness (Shadowform)\n\nYou have a 15% chance when you deal damage with Mind Flay to cause your next Mind Blast to be instant cast and have no Shadow Orb cost.
        /// </summary>
        [TalentData(index: 6, name: "From Darkness, Comes Light", maxPoints: 1, icon: "spell_holy_surgeoflight",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"Surge of Light (Caster form)

You have a 15% chance when you Smite, Heal, Flash Heal, Binding Heal or Greater Heal to cause your next Flash Heal to be instant cast and have no mana cost.



Surge of Darkness (Shadowform)

You have a 15% chance when you deal damage with Mind Flay to cause your next Mind Blast to be instant cast and have no Shadow Orb cost.",})]
        public int FromDarknessComesLight { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Fires a Divine Star in front of you, traveling 20 yards doing damage to all enemies and healing all friendly targets in its path.\n\n\n\nAfter reaching its destination, it will return to you also dealing damage and healing all targets in its path.
        /// </summary>
        [TalentData(index: 7, name: "Divine Star ", maxPoints: 1, icon: "spell_priest_divinestar",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Fires a Divine Star in front of you, traveling 20 yards doing damage to all enemies and healing all friendly targets in its path.



After reaching its destination, it will return to you also dealing damage and healing all targets in its path.",})]
        public int DivineStar { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Archangel (Caster form)\n\nConsumes your Evangelism, increasing your healing done by 5% for each Evangelism consumed. 30 sec cooldown.\n\n\n\nDark Archangel (Shadowform)\n\nConsumes your Dark Evangelism, increasing the damage done by your Mind Flay, Mind Spike, Mind Blast and Shadow Word: Death by 5% for each Dark Evangelism consumed. 90 sec cooldown.
        /// </summary>
        [TalentData(index: 8, name: "Archangel", maxPoints: 1, icon: "ability_priest_archangel",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Archangel (Caster form)

Consumes your Evangelism, increasing your healing done by 5% for each Evangelism consumed. 30 sec cooldown.



Dark Archangel (Shadowform)

Consumes your Dark Evangelism, increasing the damage done by your Mind Flay, Mind Spike, Mind Blast and Shadow Word: Death by 5% for each Dark Evangelism consumed. 90 sec cooldown.",})]
        public int Archangel { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Instantly heals the caster for 30% of their total health.
        /// </summary>
        [TalentData(index: 9, name: "Desperate Prayer", maxPoints: 1, icon: "spell_holy_testoffaith",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Instantly heals the caster for 30% of their total health.",})]
        public int DesperatePrayer { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// Increases the effectiveness of your own Power Word: Shield, Divine Aegis and Spirit Shell on yourself by 30%.
        /// </summary>
        [TalentData(index: 10, name: "Angelic Bulwark", maxPoints: 1, icon: "spell_priest_angelicbulwark",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"Increases the effectiveness of your own Power Word: Shield, Divine Aegis and Spirit Shell on yourself by 30%.",})]
        public int AngelicBulwark { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// Anytime a damaging attack brings you below 30% health, you gain an absorption shield equal to 20% of your total health lasting for until cancelled.\n\n\n\nThis effect cannot occur more than once every 90 sec.
        /// </summary>
        [TalentData(index: 11, name: "Final Prayer", maxPoints: 1, icon: "spell_priest_finalprayer",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"Anytime a damaging attack brings you below 30% health, you gain an absorption shield equal to 20% of your total health lasting for until cancelled.



This effect cannot occur more than once every 90 sec.",})]
        public int FinalPrayer { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Increases damage and healing done to targets at or below 20% health.
        /// </summary>
        [TalentData(index: 12, name: "Twist of Fate", maxPoints: 1, icon: "spell_shadow_mindtwisting",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Increases damage and healing done to targets at or below 20% health.",})]
        public int TwistOfFate { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// Infuses the target with power, increasing spell casting speed by 20% and reducing the mana cost of all spells by 20%.  Lasts 15 sec.
        /// </summary>
        [TalentData(index: 13, name: "Power Infusion", maxPoints: 1, icon: "spell_holy_powerinfusion",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"Infuses the target with power, increasing spell casting speed by 20% and reducing the mana cost of all spells by 20%.  Lasts 15 sec.",})]
        public int PowerInfusion { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Serendipity (Caster form)\n\nWhen you heal with Binding Heal or Flash Heal, the cast time of your next Greater Heal or Prayer of Healing spell is reduced by 20% and mana cost reduced by 10%. Stacks up to 2 times. Lasts 20 sec.\n\n\n\nMind Melt (Shadowform)\n\nWhen you deal damage with Mind Spike, the cast time of your next Mind Blast is reduced by 50% lasting 6 sec. Mind Melt can stack up to 2 times.
        /// </summary>
        [TalentData(index: 14, name: "Divine Insight", maxPoints: 1, icon: "spell_priest_burningwill",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Serendipity (Caster form)

When you heal with Binding Heal or Flash Heal, the cast time of your next Greater Heal or Prayer of Healing spell is reduced by 20% and mana cost reduced by 10%. Stacks up to 2 times. Lasts 20 sec.



Mind Melt (Shadowform)

When you deal damage with Mind Spike, the cast time of your next Mind Blast is reduced by 50% lasting 6 sec. Mind Melt can stack up to 2 times.",})]
        public int DivineInsight { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// You create a Vow of Unity with the the friendly target. Whenever you heal the target through spells and effects, you are also healed equal to 20% of the amount.\n\n\n\nIn addition, when the target is attacked, 50% of the damage is redirected to you over 6 sec.\n\n\n\nIf your target is victim to an attack greater than 30% of their total health, the Vow of Unity effect ends. Only one target can be linked with you using Vow of Unity at a time.
        /// </summary>
        [TalentData(index: 15, name: "Vow of Unity", maxPoints: 1, icon: "inv_helm_robe_raidpriest_k_01",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"You create a Vow of Unity with the the friendly target. Whenever you heal the target through spells and effects, you are also healed equal to 20% of the amount.



In addition, when the target is attacked, 50% of the damage is redirected to you over 6 sec.



If your target is victim to an attack greater than 30% of their total health, the Vow of Unity effect ends. Only one target can be linked with you using Vow of Unity at a time.",})]
        public int VowOfUnity { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// You swap health percentage with the current friendly target. After this effect ends, you are instantly healed for 25% of your total health.
        /// </summary>
        [TalentData(index: 16, name: "Void Shift", maxPoints: 1, icon: "spell_priest_voidshift",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"You swap health percentage with the current friendly target. After this effect ends, you are instantly healed for 25% of your total health.",})]
        public int VoidShift { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// When you deal damage or healing, 15% of the amount is healed to up to 3 low-health nearby allies.
        /// </summary>
        [TalentData(index: 17, name: "Vampiric Dominance", maxPoints: 1, icon: "spell_shadow_improvedvampiricembrace",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"When you deal damage or healing, 15% of the amount is healed to up to 3 low-health nearby allies.",})]
        public int VampiricDominance { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class DeathKnightTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            DeathKnightTalents clone = (DeathKnightTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public DeathKnightTalents() { }
        public DeathKnightTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Blood",@"Frost",@"Unholy"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Death Knight
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Your Blood Boil ability now also triggers Pestilence if it strikes a diseased target.
        /// </summary>
        [TalentData(index: 0, name: "Roiling Blood", maxPoints: 1, icon: "ability_deathknight_roilingblood",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Your Blood Boil ability now also triggers Pestilence if it strikes a diseased target.",})]
        public int RoilingBlood { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Causes an undead minion to erupt in a shower of bile, dealing 249 Shadow damage to all enemies within 40 yards of the minion, and infecting them with Blood Plague and Frost Fever.
        /// </summary>
        [TalentData(index: 1, name: "Vile Spew", maxPoints: 1, icon: "spell_shadow_plaguecloud",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"Causes an undead minion to erupt in a shower of bile, dealing 249 Shadow damage to all enemies within 40 yards of the minion, and infecting them with Blood Plague and Frost Fever.",})]
        public int VileSpew { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// Surrounds the Death Knight with a vile swarm of unholy insects for 10 sec, stinging all enemies within 10 yards every 1 sec, infecting them with Blood Plague and Frost Fever.
        /// </summary>
        [TalentData(index: 2, name: "Unholy Blight", maxPoints: 1, icon: "spell_shadow_contagion",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Surrounds the Death Knight with a vile swarm of unholy insects for 10 sec, stinging all enemies within 10 yards every 1 sec, infecting them with Blood Plague and Frost Fever.",})]
        public int UnholyBlight { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// Draw upon unholy energy to become undead for 10 sec.  While undead, you are immune to Charm, Fear, and Sleep effects.
        /// </summary>
        [TalentData(index: 3, name: "Lichborne", maxPoints: 1, icon: "spell_shadow_raisedead",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"Draw upon unholy energy to become undead for 10 sec.  While undead, you are immune to Charm, Fear, and Sleep effects.",})]
        public int Lichborne { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Places a large, stationary Anti-Magic Zone that reduces spell damage done to party or raid members inside it by 75%.  The Anti-Magic Zone lasts for 10 sec or until it absorbs 10106 spell damage.
        /// </summary>
        [TalentData(index: 4, name: "Anti-Magic Zone", maxPoints: 1, icon: "spell_deathknight_antimagiczone",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Places a large, stationary Anti-Magic Zone that reduces spell damage done to party or raid members inside it by 75%.  The Anti-Magic Zone lasts for 10 sec or until it absorbs 10106 spell damage.",})]
        public int AntiMagicZone { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Reduces the cooldown of your Death Grip spell by 15 sec and causes your Death Grip to reduce the movement speed of the target by 50% for 6 sec.
        /// </summary>
        [TalentData(index: 5, name: "Icy Grip", maxPoints: 1, icon: "ability_deathknight_desolation",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Reduces the cooldown of your Death Grip spell by 15 sec and causes your Death Grip to reduce the movement speed of the target by 50% for 6 sec.",})]
        public int IcyGrip { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// Movement-impairing effects may not reduce you below 75% of normal movement speed.
        /// </summary>
        [TalentData(index: 6, name: "Death's Advance", maxPoints: 1, icon: "spell_shadow_demonicempathy",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"Movement-impairing effects may not reduce you below 75% of normal movement speed.",})]
        public int DeathsAdvance { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Victims of your Frost Fever disease are Chilled, reducing movement speed by 50% for 10 sec, and your Chains of Ice immobilizes targets for 3 sec.
        /// </summary>
        [TalentData(index: 7, name: "Chilblains", maxPoints: 1, icon: "spell_frost_wisp",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Victims of your Frost Fever disease are Chilled, reducing movement speed by 50% for 10 sec, and your Chains of Ice immobilizes targets for 3 sec.",})]
        public int Chilblains { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Lifts an enemy target off the ground and crushes their throat with dark energy, stunning them for 5 sec.  Functions as a silence if the target is immune to stuns.\n\n\n\nReplaces Strangulate.
        /// </summary>
        [TalentData(index: 8, name: "Asphyxiate", maxPoints: 1, icon: "ability_deathknight_asphixiate",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Lifts an enemy target off the ground and crushes their throat with dark energy, stunning them for 5 sec.  Functions as a silence if the target is immune to stuns.  Replaces Strangulate.",})]
        public int Asphyxiate { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Drain vitality from an undead minion, healing the Death Knight for 50% of his maximum health and causing the minion to suffer damage equal to 50% of its maximum health.
        /// </summary>
        [TalentData(index: 9, name: "Death Pact", maxPoints: 1, icon: "spell_shadow_deathpact",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Drain vitality from an undead minion, healing the Death Knight for 50% of his maximum health and causing the minion to suffer damage equal to 50% of its maximum health.",})]
        public int DeathPact { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// Deal 2,920 Shadow damage to an enemy, healing the Death Knight for 75% of damage dealt.
        /// </summary>
        [TalentData(index: 10, name: "Death Siphon", maxPoints: 1, icon: "ability_deathknight_deathsiphon",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"Deal 2,920 Shadow damage to an enemy, healing the Death Knight for 75% of damage dealt.",})]
        public int DeathSiphon { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// Temporarily grants the Death Knight 15% of maximum health and increases the amount of health received from healing spells and effects by 25% for 10 sec.  After the effect expires, the health is lost.
        /// </summary>
        [TalentData(index: 11, name: "Vampiric Blood", maxPoints: 1, icon: "spell_shadow_lifedrain",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"Temporarily grants the Death Knight 15% of maximum health and increases the amount of health received from healing spells and effects by 25% for 10 sec.  After the effect expires, the health is lost.",})]
        public int VampiricBlood { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Each damaging Death Coil, Frost Strike, or Rune Strike generates a Blood Charge, up to a maximum of 6 charges.  Blood Tap consumes 3 Blood Charges to activate a random fully-depleted rune as a Death Rune.
        /// </summary>
        [TalentData(index: 12, name: "Blood Tap", maxPoints: 1, icon: "spell_deathknight_bloodtap",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Each damaging Death Coil, Frost Strike, or Rune Strike generates a Blood Charge, up to a maximum of 6 charges.  Blood Tap consumes 3 Blood Charges to activate a random fully-depleted rune as a Death Rune.",})]
        public int BloodTap { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// When you land a damaging Death Coil, Frost Strike, or Rune Strike, you have a 45% chance to activate a random fully depleted rune.
        /// </summary>
        [TalentData(index: 13, name: "Runic Empowerment", maxPoints: 1, icon: "inv_misc_rune_10",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"When you land a damaging Death Coil, Frost Strike, or Rune Strike, you have a 45% chance to activate a random fully depleted rune.",})]
        public int RunicEmpowerment { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// When you land a damaging Death Coil, Frost Strike, or Rune Strike, you have a 45% chance to activate Runic Corruption, increasing your rune regeneration rate by 100% for 3 sec.
        /// </summary>
        [TalentData(index: 14, name: "Runic Corruption", maxPoints: 1, icon: "spell_shadow_rune",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"When you land a damaging Death Coil, Frost Strike, or Rune Strike, you have a 45% chance to activate Runic Corruption, increasing your rune regeneration rate by 100% for 3 sec.",})]
        public int RunicCorruption { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// Shadowy tendrils coil around all enemies within 20 yards of a target (hostile or friendly), dealing 2,324 Shadow damage and pulling them to the target's location.
        /// </summary>
        [TalentData(index: 15, name: "Gorefiend's Grasp", maxPoints: 1, icon: "ability_deathknight_aoedeathgrip",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"Shadowy tendrils coil around all enemies within 20 yards of a target (hostile or friendly), dealing 2,324 Shadow damage and pulling them to the target's location.",})]
        public int GorefiendsGrasp { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// Surrounds the Death Knight with a swirling tempest of frigid air, dealing 374 Frost damage to enemies within 8 yards, every 1 sec for 8 sec.  Each time Remorseless Winter deals damage, it reduces enemy movement speed by 15%, stacking up to 5 times.  Upon receiving a fifth application, an enemy will be stunned for 6 sec.
        /// </summary>
        [TalentData(index: 16, name: "Remorseless Winter", maxPoints: 1, icon: "ability_deathknight_remorselesswinters2",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"Surrounds the Death Knight with a swirling tempest of frigid air, dealing 374 Frost damage to enemies within 8 yards, every 1 sec for 8 sec.  Each time Remorseless Winter deals damage, it reduces enemy movement speed by 15%, stacking up to 5 times.  Upon receiving a fifth application, an enemy will be stunned for 6 sec.",})]
        public int RemorselessWinter { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// Corrupts the ground in a 8 yard radius beneath the Death Knight, dealing 1,125 Shadow damage every second for 10 sec.  While standing in this corruption, the Death Knight is immune to crowd control effects.
        /// </summary>
        [TalentData(index: 17, name: "Desecrated Ground", maxPoints: 1, icon: "ability_deathknight_desecratedground",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"Corrupts the ground in a 8 yard radius beneath the Death Knight, dealing 1,125 Shadow damage every second for 10 sec.  While standing in this corruption, the Death Knight is immune to crowd control effects.",})]
        public int DesecratedGround { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class ShamanTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            ShamanTalents clone = (ShamanTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public ShamanTalents() { }
        public ShamanTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Elemental",@"Enhancement",@"Restoration"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Shaman
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Whenever a damaging attack brings you below 30% health, your maximum health is increased by 25% for 10 sec and your threat level towards the attacker is reduced.  30 second cooldown.
        /// </summary>
        [TalentData(index: 0, name: "Nature's Guardian", maxPoints: 1, icon: "spell_nature_natureguardian",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Whenever a damaging attack brings you below 30% health, your maximum health is increased by 25% for 10 sec and your threat level towards the attacker is reduced.  30 second cooldown.",})]
        public int NaturesGuardian { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Summons a Stone Bulwark Totem with 5 health at the feet of the caster for 30 sec that grants the caster a shield absorbing 359 damage, and up to an additional 120 every 5 sec thereafter.
        /// </summary>
        [TalentData(index: 1, name: "Stone Bulwark Totem", maxPoints: 1, icon: "ability_shaman_stonebulwark",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"Summons a Stone Bulwark Totem with 5 health at the feet of the caster for 30 sec that grants the caster a shield absorbing 359 damage, and up to an additional 120 every 5 sec thereafter.",})]
        public int StoneBulwarkTotem { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// Seek haven by shifting partially into the elemental planes, reducing damage taken by 50% but also all damage and healing done by 30%, for 6 sec.
        /// </summary>
        [TalentData(index: 2, name: "Astral Shift", maxPoints: 1, icon: "ability_shaman_astralshift",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Seek haven by shifting partially into the elemental planes, reducing damage taken by 50% but also all damage and healing done by 30%, for 6 sec.",})]
        public int AstralShift { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// Your Frost Shock now also roots the target in ice for 5 sec.
        /// </summary>
        [TalentData(index: 3, name: "Frozen Power", maxPoints: 1, icon: "spell_fire_bluecano",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"Your Frost Shock now also roots the target in ice for 5 sec.",})]
        public int FrozenPower { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Summons an Earthgrab Totem with 100 health at the feet of the caster for 45 sec. The totem pulses every 2 sec, causing roots to ensnare the legs of all enemies within 8 yards for 5 sec, preventing movement.  Enemies that have already been rooted once by the totem will instead have their movement speed reduced by 50%.\n\n\n\nReplaces Earthbind Totem.
        /// </summary>
        [TalentData(index: 4, name: "Earthgrab Totem", maxPoints: 1, icon: "spell_nature_stranglevines",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Summons an Earthgrab Totem with 100 health at the feet of the caster for 45 sec. The totem pulses every 2 sec, causing roots to ensnare the legs of all enemies within 8 yards for 5 sec, preventing movement.  Enemies that have already been rooted once by the totem will instead have their movement speed reduced by 50%.



Replaces Earthbind Totem.",})]
        public int EarthgrabTotem { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Summons an Air Totem with 5 health at the feet of the caster for 6 sec, granting raid members within 30 yards immunity to movement-impairing effects.
        /// </summary>
        [TalentData(index: 5, name: "Windwalk Totem", maxPoints: 1, icon: "ability_shaman_windwalktotem",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Summons an Air Totem with 5 health at the feet of the caster for 6 sec, granting raid members within 30 yards immunity to movement-impairing effects.",})]
        public int WindwalkTotem { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// When activated, immediately finishes the cooldown on all totems.
        /// </summary>
        [TalentData(index: 6, name: "Call of the Elements", maxPoints: 1, icon: "ability_shaman_multitotemactivation",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"When activated, immediately finishes the cooldown on all totems.",})]
        public int CallOfTheElements { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// When a totem is replaced or destroyed before its duration expires naturally, its cooldown is reduced in proportion to the lost duration, up to a maximum of 50% of the full cooldown.
        /// </summary>
        [TalentData(index: 7, name: "Totemic Restoration ", maxPoints: 1, icon: "ability_shaman_totemcooldownrefund",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"When a totem is replaced or destroyed before its duration expires naturally, its cooldown is reduced in proportion to the lost duration, up to a maximum of 50% of the full cooldown.",})]
        public int TotemicRestoration { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Relocates your active totems to the specified location.
        /// </summary>
        [TalentData(index: 8, name: "Totemic Projection ", maxPoints: 1, icon: "ability_shaman_totemrelocation",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Relocates your active totems to the specified location.",})]
        public int TotemicProjection { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Call upon elemental forces, empowering you with 30% haste for 20 sec.
        /// </summary>
        [TalentData(index: 9, name: "Elemental Mastery", maxPoints: 1, icon: "spell_nature_wispheal",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Call upon elemental forces, empowering you with 30% haste for 20 sec.",})]
        public int ElementalMastery { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// Passively increases spell and melee haste by 5%.\n\n\n\nWhen activated, your next Nature spell with a base casting time less than 10 sec. becomes an instant cast spell.
        /// </summary>
        [TalentData(index: 10, name: "Ancestral Swiftness", maxPoints: 1, icon: "spell_shaman_improvedreincarnation",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"Passively increases spell and melee haste by 5%.



When activated, your next Nature spell with a base casting time less than 10 sec. becomes an instant cast spell.",})]
        public int AncestralSwiftness { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// When one of your spells causes direct damage or healing, you have a chance to gain Echo of the Elements, duplicating that spell's effect.
        /// </summary>
        [TalentData(index: 11, name: "Echo of the Elements", maxPoints: 1, icon: "ability_shaman_echooftheelements",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"When one of your spells causes direct damage or healing, you have a chance to gain Echo of the Elements, duplicating that spell's effect.",})]
        public int EchoOfTheElements { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Summons a Water Totem with 10% of the caster's health at the feet of the caster for 10 sec. The Healing Tide Totem pulses every 2 sec, healing the 5 most injured raid members within 40 for 3179.
        /// </summary>
        [TalentData(index: 12, name: "Healing Tide Totem", maxPoints: 1, icon: "ability_shaman_healingtide",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Summons a Water Totem with 10% of the caster's health at the feet of the caster for 10 sec. The Healing Tide Totem pulses every 2 sec, healing the 5 most injured raid members within 40 for 3179.",})]
        public int HealingTideTotem { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// When you deal direct damage or healing for the next 10 sec seconds, 40% of that amount is copied as healing to a nearby injured ally.
        /// </summary>
        [TalentData(index: 13, name: "Ancestral Guidance", maxPoints: 1, icon: "ability_shaman_ancestralguidance",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"When you deal direct damage or healing for the next 10 sec seconds, 40% of that amount is copied as healing to a nearby injured ally.",})]
        public int AncestralGuidance { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Allies standing within your Healing Rain receive a 10% reduction to incoming magic damage.
        /// </summary>
        [TalentData(index: 14, name: "Fortifying Waters", maxPoints: 1, icon: "ability_shaman_fortifyingwaters",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Allies standing within your Healing Rain receive a 10% reduction to incoming magic damage.",})]
        public int FortifyingWaters { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// 
        /// </summary>
        [TalentData(index: 15, name: "Coming Soon!", maxPoints: 1, icon: "inv_misc_questionmark",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"",})]
        public int ComingSoon { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// 
        /// </summary>
        [TalentData(index: 16, name: "Coming Soon!", maxPoints: 1, icon: "inv_misc_questionmark",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"",})]
        public int ComingSoon1 { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// 
        /// </summary>
        [TalentData(index: 17, name: "Coming Soon!", maxPoints: 1, icon: "inv_misc_questionmark",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"",})]
        public int ComingSoon2 { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class MageTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            MageTalents clone = (MageTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public MageTalents() { }
        public MageTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Arcane",@"Fire",@"Frost"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Mage
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// When activated, your next Mage spell with a casting time less than 10 sec becomes an instant cast spell.\n\n\n\nTesting note: This spell is not on the global cooldown.
        /// </summary>
        [TalentData(index: 0, name: "Presence of Mind", maxPoints: 1, icon: "spell_nature_enchantarmor",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"When activated, your next Mage spell with a casting time less than 10 sec becomes an instant cast spell.



Testing note: This spell is not on the global cooldown.",})]
        public int PresenceOfMind { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Scorch the enemy for 1,058 Fire damage.  Can be cast while moving.
        /// </summary>
        [TalentData(index: 1, name: "Scorch", maxPoints: 1, icon: "spell_fire_soulburn",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"Scorch the enemy for 1,058 Fire damage.  Can be cast while moving.",})]
        public int Scorch { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// Allows the next two non-instant Mage spells cast within 8 sec to be cast while moving.  This spell may be cast while a cast time spell is in progress.\n\n\n\nTesting note: This spell is not on the global cooldown.
        /// </summary>
        [TalentData(index: 2, name: "Ice Flows", maxPoints: 1, icon: "spell_frost_arcticwinds",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Allows the next two non-instant Mage spells cast within 8 sec to be cast while moving.  This spell may be cast while a cast time spell is in progress.



Testing note: This spell is not on the global cooldown.",})]
        public int IceFlows { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// Envelops you in a temporal shield for 4 sec. Damage taken while shielded will be undone over 6 sec.\n\n\n\nTesting note: This spell is not on the global cooldown.
        /// </summary>
        [TalentData(index: 3, name: "Temporal Shield", maxPoints: 1, icon: "spell_arcane_rune",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"Envelops you in a temporal shield for 4 sec. Damage taken while shielded will be undone over 6 sec.



Testing note: This spell is not on the global cooldown.",})]
        public int TemporalShield { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Suppresses movement slowing effects and increases your movement speed by 150% for 1.50 sec.  May only be activated after taking a melee or spell hit greater than 2% of your total health.  This spell may be cast while a cast time spell is in progress.\n\n\n\nTesting note: This spell is not on the global cooldown.
        /// </summary>
        [TalentData(index: 4, name: "Blazing Speed", maxPoints: 1, icon: "spell_fire_burningspeed",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Suppresses movement slowing effects and increases your movement speed by 150% for 1.50 sec.  May only be activated after taking a melee or spell hit greater than 2% of your total health.  This spell may be cast while a cast time spell is in progress.



Testing note: This spell is not on the global cooldown.",})]
        public int BlazingSpeed { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Instantly shields you, absorbing 8218 damage.  Lasts 1 min.  While the shield holds, spellcasting will not be delayed by damage.
        /// </summary>
        [TalentData(index: 5, name: "Ice Barrier", maxPoints: 1, icon: "spell_ice_lament",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Instantly shields you, absorbing 8218 damage.  Lasts 1 min.  While the shield holds, spellcasting will not be delayed by damage.",})]
        public int IceBarrier { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// Summons a Ring of Frost at the target location.  Enemies entering the ring will become frozen for 10 sec.  Lasts 10 sec.  10 yd radius.
        /// </summary>
        [TalentData(index: 6, name: "Ring of Frost", maxPoints: 1, icon: "spell_frost_ringoffrost",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"Summons a Ring of Frost at the target location.  Enemies entering the ring will become frozen for 10 sec.  Lasts 10 sec.  10 yd radius.",})]
        public int RingOfFrost { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Places an Ice Ward on a friendly target. When an enemy strikes the target, all enemies within 10 yds will become frozen in place for 5 sec. 1 charge.  Lasts 30 sec.\n\n\n\nTesting note: This spell is not on the global cooldown.
        /// </summary>
        [TalentData(index: 7, name: "Ice Ward", maxPoints: 1, icon: "spell_frost_frostward",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Places an Ice Ward on a friendly target. When an enemy strikes the target, all enemies within 10 yds will become frozen in place for 5 sec. 1 charge.  Lasts 30 sec.



Testing note: This spell is not on the global cooldown.",})]
        public int IceWard { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Silences and freezes the target in place for 8 sec.  Lasts half as long versus Player targets.
        /// </summary>
        [TalentData(index: 8, name: "Frostjaw", maxPoints: 1, icon: "ability_mage_frostjaw",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Silences and freezes the target in place for 8 sec.  Lasts half as long versus Player targets.",})]
        public int Frostjaw { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Instantly makes the caster invisible, reducing all threat, and removing two damage over time effects. While invisible, you are untargettable by enemies.  Lasts 20 sec.\n\n\n\nDamage taken is reduced by 90% while invisible and for 3 sec after coming out of invisibility.\n\n\n\nInvisibility is cancelled if you perform any actions.\n\n\n\nReplaces Invisibility.
        /// </summary>
        [TalentData(index: 9, name: "Greater Invisibility", maxPoints: 1, icon: "ability_mage_greaterinvisibility",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Instantly makes the caster invisible, reducing all threat, and removing two damage over time effects. While invisible, you are untargettable by enemies.  Lasts 20 sec.



Damage taken is reduced by 90% while invisible and for 3 sec after coming out of invisibility.



Invisibility is cancelled if you perform any actions.



Replaces Invisibility.",})]
        public int GreaterInvisibility { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// An attack which would otherwise kill you will instead bring you to 50% of your maximum health, and you will burn for 40% of your maximum health over the next 6 sec.\n\n\n\nCauterize cannot occur more than once every 2 minutes.
        /// </summary>
        [TalentData(index: 10, name: "Cauterize", maxPoints: 1, icon: "spell_fire_rune",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"An attack which would otherwise kill you will instead bring you to 50% of your maximum health, and you will burn for 40% of your maximum health over the next 6 sec.



Cauterize cannot occur more than once every 2 minutes.",})]
        public int Cauterize { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// When activated, this spell finishes the cooldown of your Ice Block, Frost Nova, and Cone of Cold spell.  Instantly restores 20% of your health.\n\n\n\nTesting note: This spell is not on the global cooldown.
        /// </summary>
        [TalentData(index: 11, name: "Cold Snap", maxPoints: 1, icon: "spell_frost_wizardmark",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"When activated, this spell finishes the cooldown of your Ice Block, Frost Nova, and Cone of Cold spell.  Instantly restores 20% of your health.



Testing note: This spell is not on the global cooldown.",})]
        public int ColdSnap { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Places a Nether Tempest on the target which deals 2784 (+ 17.4% of SpellPower) (+ 17.4% of SpellPower) Arcane damage over 12 sec. Each time Nether Tempest deals damage, an additional 50% of that damage is also dealt to a random target within 10 yards.
        /// </summary>
        [TalentData(index: 12, name: "Nether Tempest", maxPoints: 1, icon: "spell_arcane_arcane04",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Places a Nether Tempest on the target which deals 2784 (+ 17.4% of SpellPower) (+ 17.4% of SpellPower) Arcane damage over 12 sec. Each time Nether Tempest deals damage, an additional 50% of that damage is also dealt to a random target within 10 yards.",})]
        public int NetherTempest { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// The target becomes a Living Bomb, taking 1388 (+ 26% of SpellPower) (+ 26% of SpellPower) Fire damage over 12 sec. When this effect ends, or the target dies, it explodes to deal an additional 1395 (+ 104.5% of SpellPower) (+ 104.5% of SpellPower) Fire damage to up to 3 enemies within 10 yards.  Limit 3 targets. This spell has a 1.0 sec global cooldown.
        /// </summary>
        [TalentData(index: 13, name: "Living Bomb", maxPoints: 1, icon: "ability_mage_livingbomb",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"The target becomes a Living Bomb, taking 1388 (+ 26% of SpellPower) (+ 26% of SpellPower) Fire damage over 12 sec. When this effect ends, or the target dies, it explodes to deal an additional 1395 (+ 104.5% of SpellPower) (+ 104.5% of SpellPower) Fire damage to up to 3 enemies within 10 yards.  Limit 3 targets.

This spell has a 1.0 sec global cooldown.",})]
        public int LivingBomb { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Places a Frost Bomb on the target.  After 5 sec, the bomb explodes, dealing 3286 (+ 246.2% of SpellPower) (+ 246.2% of SpellPower) Frost damage to the primary target, and 1643 (+ 123.1% of SpellPower) (+ 123.1% of SpellPower) Frost damage to all other targets within 10 yds.  All affected targets are slowed by 70% for 2 sec. Frost Bomb's countdown and cooldown are reduced by haste.
        /// </summary>
        [TalentData(index: 14, name: "Frost Bomb", maxPoints: 1, icon: "spell_frost_frozencore",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Places a Frost Bomb on the target.  After 5 sec, the bomb explodes, dealing 3286 (+ 246.2% of SpellPower) (+ 246.2% of SpellPower) Frost damage to the primary target, and 1643 (+ 123.1% of SpellPower) (+ 123.1% of SpellPower) Frost damage to all other targets within 10 yds.  All affected targets are slowed by 70% for 2 sec. Frost Bomb's countdown and cooldown are reduced by haste.",})]
        public int FrostBomb { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// Reduces the cooldown of Evocation to 10 sec, but you passively regenerate 50% less mana. Completing an Evocation causes you to deal 25% increased spell damage for 40 sec.
        /// </summary>
        [TalentData(index: 15, name: "Invocation", maxPoints: 1, icon: "spell_arcane_arcane03",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"Reduces the cooldown of Evocation to 10 sec, but you passively regenerate 50% less mana.

Completing an Evocation causes you to deal 25% increased spell damage for 40 sec.",})]
        public int Invocation { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// Places a Rune of Power on the ground, which lasts for 1 min. While standing in your own Rune of Power, your mana regeneration is increased by 100% and your spell damage is increased by 15%. Only 2 Runes of Power can be placed at one time. Replaces Evocation.
        /// </summary>
        [TalentData(index: 16, name: "Rune of Power", maxPoints: 1, icon: "spell_arcane_invocation",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"Places a Rune of Power on the ground, which lasts for 1 min. While standing in your own Rune of Power, your mana regeneration is increased by 100% and your spell damage is increased by 15%. Only 2 Runes of Power can be placed at one time.

Replaces Evocation.",})]
        public int RuneOfPower { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// Places a magical ward on you, absorbing up to (1041 + $SPA * 1.0) damage for 8 sec. Absorbed damage will restore up to 18% of your maximum mana. When this effect ends, you gain up to 30% increased spell damage for 15 sec, based on the absorption used. Passive: Increases spell damage by 6% and increases mana regeneration by 65%. This effect is deactivated while Incanter's Ward is on cooldown.
        /// </summary>
        [TalentData(index: 17, name: "Incanter's Shield", maxPoints: 1, icon: "spell_shadow_detectlesserinvisibility",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"Places a magical ward on you, absorbing up to (1041 + $SPA * 1.0) damage for 8 sec. Absorbed damage will restore up to 18% of your maximum mana.

When this effect ends, you gain up to 30% increased spell damage for 15 sec, based on the absorption used.

Passive:
Increases spell damage by 6% and increases mana regeneration by 65%. This effect is deactivated while Incanter's Ward is on cooldown.",})]
        public int IncantersWard { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class WarlockTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            WarlockTalents clone = (WarlockTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public WarlockTalents() { }
        public WarlockTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Affliction",@"Demonology",@"Destruction"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Warlock
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Restores 50% of your maximum health and increases all healing received by 25% over 20 sec.
        /// </summary>
        [TalentData(index: 0, name: "Dark Regeneration", maxPoints: 1, icon: "spell_warlock_darkregeneration",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Restores 50% of your maximum health and increases all healing received by 25% over 20 sec.",})]
        public int DarkRegeneration { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Your Shadow Bolt, Incinerate and Malefic Grasp heal you for 15% of the damage dealt.
        /// </summary>
        [TalentData(index: 1, name: "Soul Leech", maxPoints: 1, icon: "warlock_siphonlife",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"Your Shadow Bolt, Incinerate and Malefic Grasp heal you for 15% of the damage dealt.",})]
        public int SoulLeech { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// Drains the life from all enemies within 15 yards of the target, causing 107 Shadow damage and restoring 4% of the caster's total health every 1 sec. Lasts 6 sec.\n\n\n\nReplaces Drain Life.
        /// </summary>
        [TalentData(index: 2, name: "Harvest Life", maxPoints: 1, icon: "spell_warlock_harvestoflife",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Drains the life from all enemies within 15 yards of the target, causing 107 Shadow damage and restoring 4% of the caster's total health every 1 sec. Lasts 6 sec.



Replaces Drain Life.",})]
        public int HarvestLife { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// Howl, causing 5 enemies within 10 yds to flee in terror for 8 sec.  Damage caused may interrupt the effect.\n\n\n\nWhen hit by a damaging attack, the cooldown on Howl of Terror is reduced by 1 sec.
        /// </summary>
        [TalentData(index: 3, name: "Howl of Terror", maxPoints: 1, icon: "spell_shadow_deathscream",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"Howl, causing 5 enemies within 10 yds to flee in terror for 8 sec.  Damage caused may interrupt the effect.



When hit by a damaging attack, the cooldown on Howl of Terror is reduced by 1 sec.",})]
        public int HowlOfTerror { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Causes the enemy target to run in horror for 3 sec. The caster restores 25% of their maximum health if the target is horrified.
        /// </summary>
        [TalentData(index: 4, name: "Mortal Coil", maxPoints: 1, icon: "spell_shadow_deathsembrace",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Causes the enemy target to run in horror for 3 sec. The caster restores 25% of their maximum health if the target is horrified.",})]
        public int MortalCoil { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Shadowfury is unleashed, stunning all enemies within 8 yds for 3 sec.
        /// </summary>
        [TalentData(index: 5, name: "Shadowfury", maxPoints: 1, icon: "spell_shadow_shadowfury",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Shadowfury is unleashed, stunning all enemies within 8 yds for 3 sec.",})]
        public int Shadowfury { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// When active, all damage and healing the Warlock takes is shared with his active demon.  That damage cannot be prevented. \n\n\n\nLasts as long as the demon is active and controlled.
        /// </summary>
        [TalentData(index: 6, name: "Soul Link", maxPoints: 1, icon: "spell_shadow_gathershadows",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"When active, all damage and healing the Warlock takes is shared with his active demon.  That damage cannot be prevented. 



Lasts as long as the demon is active and controlled.",})]
        public int SoulLink { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Your demon sacrifices half its current health to shield its master for 300% of the sacrificed health.\n\n\n\nLasts 20 sec.
        /// </summary>
        [TalentData(index: 7, name: "Sacrificial Pact", maxPoints: 1, icon: "warlock_sacrificial_pact",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Your demon sacrifices half its current health to shield its master for 300% of the sacrificed health.



Lasts 20 sec.",})]
        public int SacrificialPact { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Prevents all damage for 10 sec.\n\n\n\nWhen the shield fades, 50% of the damage prevented is dealt over 20 sec.
        /// </summary>
        [TalentData(index: 8, name: "Dark Bargain", maxPoints: 1, icon: "ability_deathwing_bloodcorruption_death",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Prevents all damage for 10 sec.



When the shield fades, 50% of the damage prevented is dealt over 20 sec.",})]
        public int DarkBargain { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Costs 10% of Maximum Health.\n\n\n\nInstantly strikes fear in the enemy, causing it to run in fear for up to 20 sec.  Damage caused may interrupt the effect.\n\n\n\nFear: \n\nA warlock can only inflict fear upon one target at a time.
        /// </summary>
        [TalentData(index: 9, name: "Blood Fear", maxPoints: 1, icon: "ability_deathwing_assualtaspects",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Costs 10% of Maximum Health.



Instantly strikes fear in the enemy, causing it to run in fear for up to 20 sec.  Damage caused may interrupt the effect.



Fear: 

A warlock can only inflict fear upon one target at a time.",})]
        public int BloodFear { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// Drains 5% of your maximum health per second to increase your movement speed by 50%. \n\n\n\nLasts until cancelled.
        /// </summary>
        [TalentData(index: 10, name: "Burning Rush", maxPoints: 1, icon: "ability_deathwing_sealarmorbreachtga",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"Drains 5% of your maximum health per second to increase your movement speed by 50%. 



Lasts until cancelled.",})]
        public int BurningRush { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// Purges all stuns, disorients, roots and Magic effects from the Warlock. \n\n\n\nCosts 25% of the Warlock's maximum health.
        /// </summary>
        [TalentData(index: 11, name: "Unbound Will", maxPoints: 1, icon: "warlock_spelldrain",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"Purges all stuns, disorients, roots and Magic effects from the Warlock. 



Costs 25% of the Warlock's maximum health.",})]
        public int UnboundWill { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// You command stronger demons, replacing your normal minions. These demons deal 10% additional damage and have more powerful abilities. \n\n\n\nSpells Learned:\n\nSummon Fel Imp\n\nSummon Voidlord\n\nSummon Shivan\n\nSummon Observer\n\nSummon Abyssal\n\nSummon Terrorguard
        /// </summary>
        [TalentData(index: 12, name: "Grimoire of Supremacy", maxPoints: 1, icon: "warlock_grimoireofcommand",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"You command stronger demons, replacing your normal minions. These demons deal 10% additional damage and have more powerful abilities. 



Spells Learned:

Summon Fel Imp

Summon Voidlord

Summon Shivan

Summon Observer

Summon Abyssal

Summon Terrorguard",})]
        public int GrimoireOfSupremacy { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// Instantly summon a second demon, who fights for 30 sec.\n\n\n\n2 min. cooldown.
        /// </summary>
        [TalentData(index: 13, name: "Grimoire of Service", maxPoints: 1, icon: "warlock_grimoireofservice",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"Instantly summon a second demon, who fights for 30 sec.



2 min. cooldown.",})]
        public int GrimoireOfService { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// You sacrifice your demon to gain increased damage and health. Lasts for 15 min.\n\n\n\nSummoning another demon cancels the effect.
        /// </summary>
        [TalentData(index: 14, name: "Grimoire of Sacrifice", maxPoints: 1, icon: "warlock_grimoireofsacrifice",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"You sacrifice your demon to gain increased damage and health. Lasts for 15 min.



Summoning another demon cancels the effect.",})]
        public int GrimoireOfSacrifice { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// Curse an enemy, causing them to suffer 30% of all damage you take. Lasts 10 sec.\n\n\n\nPassive:\n\nEnemies who attack you suffer 5% of all damage they deal to you. This effect is disabled while on cooldown.
        /// </summary>
        [TalentData(index: 15, name: "Archimonde's Vengeance", maxPoints: 1, icon: "achievement_boss_archimonde",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"Curse an enemy, causing them to suffer 30% of all damage you take. Lasts 10 sec.



Passive:

Enemies who attack you suffer 5% of all damage they deal to you. This effect is disabled while on cooldown.",})]
        public int ArchimondesVengeance { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// You can cast and channel while moving, but doing so doubles the cast time or period of the spell.
        /// </summary>
        [TalentData(index: 16, name: "Kil'jaeden's Cunning", maxPoints: 1, icon: "achievement_boss_kiljaedan",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"You can cast and channel while moving, but doing so doubles the cast time or period of the spell.",})]
        public int KiljaedensCunning { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// Increases the radius of your non-talent Area of Effect spells by 200%.
        /// </summary>
        [TalentData(index: 17, name: "Mannoroth's Fury", maxPoints: 1, icon: "achievement_boss_magtheridon",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"Increases the radius of your non-talent Area of Effect spells by 200%.",})]
        public int MannorothsFury { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class DruidTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            DruidTalents clone = (DruidTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public DruidTalents() { }
        public DruidTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Balance",@"Feral",@"Guardian",@"Restoration"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Druid
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Increases your movement speed by 15%.
        /// </summary>
        [TalentData(index: 0, name: "Feline Swiftness", maxPoints: 1, icon: "spell_druid_tirelesspursuit",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Increases your movement speed by 15%.",})]
        public int FelineSwiftness { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Teleports the Druid up to 20 yards forward and activates Cat Form and Prowl.
        /// </summary>
        [TalentData(index: 1, name: "Displacer Beast", maxPoints: 1, icon: "spell_druid_displacement",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"Teleports the Druid up to 20 yards forward and activates Cat Form and Prowl.",})]
        public int DisplacerBeast { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// Fly to a nearby ally's position.
        /// </summary>
        [TalentData(index: 2, name: "Wild Charge", maxPoints: 1, icon: "spell_druid_wildcharge",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Fly to a nearby ally's position.",})]
        public int WildCharge { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// When activated, your next Cyclone, Entangling Roots, Healing Touch, Hibernate, Nourish, Rebirth, or Regrowth becomes instant, free, and castable in all forms.  The healing and duration of the spell is increased by 50%.
        /// </summary>
        [TalentData(index: 3, name: "Nature's Swiftness", maxPoints: 1, icon: "spell_nature_ravenform",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"When activated, your next Cyclone, Entangling Roots, Healing Touch, Hibernate, Nourish, Rebirth, or Regrowth becomes instant, free, and castable in all forms.  The healing and duration of the spell is increased by 50%.",})]
        public int NaturesSwiftness { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Instantly heals the Druid for 30% of maximum health.  Useable in all shapeshift forms.
        /// </summary>
        [TalentData(index: 4, name: "Renewal", maxPoints: 1, icon: "spell_nature_natureblessing",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Instantly heals the Druid for 30% of maximum health.  Useable in all shapeshift forms.",})]
        public int Renewal { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// Protects a friendly target, causing any damage taken to heal the target for 6174 (+ 57% of SpellPower) every 2 sec for 6 sec.  Gaining the healing effect consumes the Cenarion Ward.  Useable in all shapeshift forms.  Lasts 30 sec.
        /// </summary>
        [TalentData(index: 5, name: "Cenarion Ward", maxPoints: 1, icon: "ability_druid_naturalperfection",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"Protects a friendly target, causing any damage taken to heal the target for 6174 (+ 57% of SpellPower) every 2 sec for 6 sec.  Gaining the healing effect consumes the Cenarion Ward.  Useable in all shapeshift forms.  Lasts 30 sec.",})]
        public int CenarionWard { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// Grants an improved version of Faerie Fire that also reduces the target's movement speed by 50% for 15 sec.\n\n\n\n
        /// This talent replaces Faerie Fire.
        /// </summary>
        [TalentData(index: 6, name: "Faerie Swarm", maxPoints: 1, icon: "spell_druid_swarm",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"Grants an improved version of Faerie Fire that also reduces the target's movement speed by 50% for 15 sec.



This talent replaces Faerie Fire.",})]
        public int FaerieSwarm { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Roots your target in place for 20 sec and spreads to additional nearby enemies.  Affects 5 total targets.  Damage caused may interrupt the effect.  Useable in all shapeshift forms.
        /// </summary>
        [TalentData(index: 7, name: "Mass Entanglement", maxPoints: 1, icon: "spell_druid_massentanglement",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Roots your target in place for 20 sec and spreads to additional nearby enemies.  Affects 5 total targets.  Damage caused may interrupt the effect.  Useable in all shapeshift forms.",})]
        public int MassEntanglement { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Summons a violent Typhoon that strikes targets in front of the caster within 30 yards, knocking them back and dazing them for 6 sec.  Useable in all shapeshift forms.
        /// </summary>
        [TalentData(index: 8, name: "Typhoon", maxPoints: 1, icon: "ability_druid_typhoon",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Summons a violent Typhoon that strikes targets in front of the caster within 30 yards, knocking them back and dazing them for 6 sec.  Useable in all shapeshift forms.",})]
        public int Typhoon { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Aessina's blessing grants a benefit which varies by your combat specialization.\n\n\n\n
        /// Balance\n\n
        /// When a Lunar Eclipse ends you gain 20 Solar Energy and when a Solar Eclipse ends you gain 20 Lunar Energy.\n\n\n\n
        /// Feral\n\n
        /// Your finishing moves grant 2 Energy per combo point.\n\n\n\n
        /// Guardian\n\n
        /// Mangle now generates an additional 2 Rage.\n\n\n\n
        /// Restoration\n\n
        /// You gain 50% haste for your next spell when you cast Swiftmend.
        /// </summary>
        [TalentData(index: 9, name: "Soul of the Forest", maxPoints: 1, icon: "ability_druid_manatree",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Aessina's blessing grants a benefit which varies by your combat specialization.



Balance

When a Lunar Eclipse ends you gain 20 Solar Energy and when a Solar Eclipse ends you gain 20 Lunar Energy.



Feral

Your finishing moves grant 2 Energy per combo point.



Guardian

Mangle now generates an additional 2 Rage.



Restoration

You gain 50% haste for your next spell when you cast Swiftmend.",})]
        public int SoulOfTheForest { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// Grants a superior shapeshifting form appropriate to your specialization for 30 sec.  You may freely shapeshift in and out of this form for the duration of Incarnation.\n\n\n\n
        /// Balance: Chosen of Elune\n\n
        /// Improved Moonkin Form that gains 25% increased Arcane and Nature damage while Eclipse is active.\n\n\n\n
        /// Feral: King of the Jungle\n\n
        /// Improved Cat Form that allows the use of all abilities which normally require stealth, allows the use of Prowl while in combat, and removes the positional requirement of Ravage.\n\n\n\n
        /// Guardian: Son of Ursoc\n\n
        /// Improved Bear Form that reduces the cooldown on melee damage abilities and Growl to 1.5 sec.\n\n\n\n
        /// Restoration: Tree of Life\n\n
        /// Tree of Life Form that increases healing done by 15%, increases armor by 120%, and enhances Lifebloom, Wild Growth, Regrowth, and Entangling Roots spellcasts.
        /// </summary>
        [TalentData(index: 10, name: "Incarnation", maxPoints: 1, icon: "spell_druid_incarnation",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"Grants a superior shapeshifting form appropriate to your specialization for 30 sec.  You may freely shapeshift in and out of this form for the duration of Incarnation.



Balance: Chosen of Elune

Improved Moonkin Form that gains 25% increased Arcane and Nature damage while Eclipse is active.



Feral: King of the Jungle

Improved Cat Form that allows the use of all abilities which normally require stealth, allows the use of Prowl while in combat, and removes the positional requirement of Ravage.



Guardian: Son of Ursoc

Improved Bear Form that reduces the cooldown on melee damage abilities and Growl to 1.5 sec.



Restoration: Tree of Life

Tree of Life Form that increases healing done by 15%, increases armor by 120%, and enhances Lifebloom, Wild Growth, Regrowth, and Entangling Roots spellcasts.",})]
        public int Incarnation { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// Summons 3 treants to assist in the Druid's current combat role for 15 sec.  Treant capabilities vary by specialization.  Useable in all shapeshift forms.
        /// </summary>
        [TalentData(index: 11, name: "Force of Nature", maxPoints: 1, icon: "ability_druid_forceofnature",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"Summons 3 treants to assist in the Druid's current combat role for 15 sec.  Treant capabilities vary by specialization.  Useable in all shapeshift forms.",})]
        public int ForceOfNature { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Invokes the spirit of Ursol to roar, disorienting all enemies within 10 yards for 3 sec.  Any damage caused will remove the effect.  Useable in all shapeshift forms.
        /// </summary>
        [TalentData(index: 12, name: "Disorienting Roar", maxPoints: 1, icon: "ability_druid_demoralizingroar",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Invokes the spirit of Ursol to roar, disorienting all enemies within 10 yards for 3 sec.  Any damage caused will remove the effect.  Useable in all shapeshift forms.",})]
        public int DisorientingRoar { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// Conjures a vortex of wind at the destination location that reduces the movement speed of all enemies within 8 yards by 50%. \n\n\n\n
        /// The first time an enemy attempts to leave the vortex, winds will pull that enemy back to its center. \n\n\n\n
        /// Lasts 10 sec.  Useable in all shapeshift forms.
        /// </summary>
        [TalentData(index: 13, name: "Ursol's Vortex", maxPoints: 1, icon: "spell_druid_ursolsvortex",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"Conjures a vortex of wind at the destination location that reduces the movement speed of all enemies within 8 yards by 50%.



The first time an enemy attempts to leave the vortex, winds will pull that enemy back to its center.



Lasts 10 sec.  Useable in all shapeshift forms.",})]
        public int UrsolsVortex { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Invokes the spirit of Ursoc to stun the target for 5 sec.  Useable in all shapeshift forms.
        /// </summary>
        [TalentData(index: 14, name: "Mighty Bash", maxPoints: 1, icon: "ability_druid_bash",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Invokes the spirit of Ursoc to stun the target for 5 sec.  Useable in all shapeshift forms.",})]
        public int MightyBash { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// Increases Stamina, Agility, and Intellect by 6% at all times. When activated, dramatically improves the Druid's ability to perform roles outside of their normal specialization for 45 sec. Grants the following benefits based on current specialization: \n\n\n\n
        /// Non-Guardian \n\n
        /// While in Bear Form, Agility, Expertise, Hit Chance, and armor bonuses increased, and chance to be hit by melee critical strikes reduced.\n\n\n\n
        /// Non-Feral \n\n
        /// While in Cat Form, Agility, Hit Chance, and Expertise increased. \n\n\n\n
        /// Non-Restoration \n\n
        /// Healing increased and mana cost of all healing spells reduced by 100%. Guardian Druids may also cast Rejuvenation while shapeshifted. \n\n\n\n
        /// Non-Balance \n\n
        /// Spell Damage and Hit Chance increased. Mana cost of all damage spells reduced by 100%.
        /// </summary>
        [TalentData(index: 15, name: "Heart of the Wild", maxPoints: 1, icon: "spell_holy_blessingofagility",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"Increases Stamina, Agility, and Intellect by 6% at all times. When activated, dramatically improves the Druid's ability to perform roles outside of their normal specialization for 45 sec. Grants the following benefits based on current specialization:



Non-Guardian

While in Bear Form, Agility, Expertise, Hit Chance, and armor bonuses increased, and chance to be hit by melee critical strikes reduced.



Non-Feral

While in Cat Form, Agility, Hit Chance, and Expertise increased.



Non-Restoration

Healing increased and mana cost of all healing spells reduced by 100%. Guardian Druids may also cast Rejuvenation while shapeshifted.



Non-Balance

Spell Damage and Hit Chance increased. Mana cost of all damage spells reduced by 100%.",})]
        public int HeartOfTheWild { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// Wrath, Starfire, Starsurge, and melee abilities increase healing done by your next healing spell by 70%. Tranquility is not affected. \n\n\n\n
        /// Non-instant casts of Nourish, Healing Touch, and Regrowth increase the damage done by your next damaging spell by 70% or by your next melee ability by 30%. \n\n\n\n
        /// Each of these bonuses lasts 30 sec.
        /// </summary>
        [TalentData(index: 16, name: "Dream of Cenarius", maxPoints: 1, icon: "ability_druid_dreamstate",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"Wrath, Starfire, Starsurge, and melee abilities increase healing done by your next healing spell by 70%. Tranquility is not affected.



Non-instant casts of Nourish, Healing Touch, and Regrowth increase the damage done by your next damaging spell by 70% or by your next melee ability by 30%.



Each of these bonuses lasts 30 sec.",})]
        public int DreamOfCenarius { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// Increases all damage and healing done by 20% for 30 sec.  While active, all single-target healing spells also damage a nearby enemy target for 25% of the healing done, and all single-target damage spells and abilities also heal a nearby friendly target for 25% of the damage done.
        /// </summary>
        [TalentData(index: 17, name: "Nature's Vigil", maxPoints: 1, icon: "achievement_zone_feralas",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"Increases all damage and healing done by 20% for 30 sec.  While active, all single-target healing spells also damage a nearby enemy target for 25% of the healing done, and all single-target damage spells and abilities also heal a nearby friendly target for 25% of the damage done.",})]
        public int NaturesVigil { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

    public partial class MonkTalents : TalentsBase
    {
        public override TalentsBase Clone()
        {
            MonkTalents clone = (MonkTalents)MemberwiseClone();
            clone._data = (int[])_data.Clone();
            clone._glyphData = (bool[])_glyphData.Clone();
            clone.TreeCounts = new int[] { -1, -1, -1 };
            return clone;
        }

        private int[] _data = new int[18];
        public override int[] Data { get { return _data; } }
        public MonkTalents() { }
        public MonkTalents(string talents, int[][] glyphEncodes = null)
        {
            LoadString(talents, glyphEncodes);
        }
        private static string[] specializationNames = new[] {
			@"Brewmaster",@"Mistweaver",@"Windwalker"};
        public override string[] SpecializationNames
        {
            get { return specializationNames; }
        }

        #region Monk
        public override int TreeStartingIndexes_0 { get { return 0; } }
        /// <summary>
        /// Allows you to Roll and Chi Torpedo more often, increases their maximum number of charges by 1, and reduces their cooldown by 5 sec.
        /// </summary>
        [TalentData(index: 0, name: "Celerity", maxPoints: 1, icon: "ability_monk_quipunch",
         tree: 0, column: 1, row: 1, prerequisite: -1, description: new[] {
@"Allows you to Roll and Chi Torpedo more often, increases their maximum number of charges by 1, and reduces their cooldown by 5 sec.",})]
        public int Celerity { get { return _data[0]; } set { _data[0] = value; } }
        /// <summary>
        /// Instantly clears the target of all immobilizing and movement impairing effects, and increases their movement speed by 70% for 6 sec.
        /// </summary>
        [TalentData(index: 1, name: "Tiger's Lust", maxPoints: 1, icon: "ability_monk_tigerslust",
         tree: 0, column: 2, row: 1, prerequisite: -1, description: new[] {
@"Instantly clears the target of all immobilizing and movement impairing effects, and increases their movement speed by 70% for 6 sec.",})]
        public int TigersLust { get { return _data[1]; } set { _data[1] = value; } }
        /// <summary>
        /// Every time you Roll or Chi Torpedo, your movement speed is increased by 25% for 10 sec. Stacks up to 2 times.
        /// </summary>
        [TalentData(index: 2, name: "Momentum", maxPoints: 1, icon: "ability_monk_standingkick",
         tree: 0, column: 3, row: 1, prerequisite: -1, description: new[] {
@"Every time you Roll or Chi Torpedo, your movement speed is increased by 25% for 10 sec. Stacks up to 2 times.",})]
        public int Momentum { get { return _data[2]; } set { _data[2] = value; } }
        /// <summary>
        /// You cause a wave of Chi energy to flow through friend and foe, dealing 124 damage or 384 healing. Bounces up to 7 times to the nearest targets within 20 yards.
        /// When bouncing to allies, Chi Wave will prefer those injured over full health.
        /// </summary>
        [TalentData(index: 3, name: "Chi Wave", maxPoints: 1, icon: "ability_monk_chiwave",
         tree: 0, column: 1, row: 2, prerequisite: -1, description: new[] {
@"You cause a wave of Chi energy to flow through friend and foe, dealing 124 damage or 384 healing. Bounces up to 7 times to the nearest targets within 20 yards.

When bouncing to allies, Chi Wave will prefer those injured over full health.",})]
        public int ChiWave { get { return _data[3]; } set { _data[3] = value; } }
        /// <summary>
        /// Forms a Zen Sphere above the target, healing the target for 126 and dealing 41 damage to the nearest enemy within 10 yards of the target every 2 sec for 16 sec. Only one Zen Sphere can be summoned at any one time.
        /// If Zen Sphere is cast again while active, the Zen Sphere will detonate, dealing 144 damage and 450 healing to all targets within 10 yards.
        /// </summary>
        [TalentData(index: 4, name: "Zen Sphere", maxPoints: 1, icon: "ability_monk_forcesphere",
         tree: 0, column: 2, row: 2, prerequisite: -1, description: new[] {
@"Forms a Zen Sphere above the target, healing the target for 126 and dealing 41 damage to the nearest enemy within 10 yards of the target every 2 sec for 16 sec. Only one Zen Sphere can be summoned at any one time.

If Zen Sphere is cast again while active, the Zen Sphere will detonate, dealing 144 damage and 450 healing to all targets within 10 yards.",})]
        public int ZenSphere { get { return _data[4]; } set { _data[4] = value; } }
        /// <summary>
        /// You summon a torrent of Chi energy and hurl it at the target, dealing 138 to 413 damage to all enemies, and 432 to 1295 healing to all allies in its path. Chi Burst will always heal the Monk.
        /// While casting Chi Burst, you continue to dodge, parry, and auto-attack.
        /// </summary>
        [TalentData(index: 5, name: "Chi Burst", maxPoints: 1, icon: "spell_arcane_arcanetorrent",
         tree: 0, column: 3, row: 2, prerequisite: -1, description: new[] {
@"You summon a torrent of Chi energy and hurl it at the target, dealing 138 to 413 damage to all enemies, and 432 to 1295 healing to all allies in its path. Chi Burst will always heal the Monk.

While casting Chi Burst, you continue to dodge, parry, and auto-attack.",})]
        public int ChiBurst { get { return _data[5]; } set { _data[5] = value; } }
        /// <summary>
        /// Your Jab generates an additional Chi when used. This effect has a 20 sec cooldown. 
        /// If you are already at maximum Chi, a Chi Sphere will be summoned near you.
        /// </summary>
        [TalentData(index: 6, name: "Power Strikes", maxPoints: 1, icon: "ability_monk_powerstrikes",
         tree: 0, column: 1, row: 3, prerequisite: -1, description: new[] {
@"Your Jab generates an additional Chi when used. This effect has a 20 sec cooldown.

If you are already at maximum Chi, a Chi Sphere will be summoned near you.",})]
        public int PowerStrikes { get { return _data[6]; } set { _data[6] = value; } }
        /// <summary>
        /// Increases the amount of maximum Chi by 1.
        /// </summary>
        [TalentData(index: 7, name: "Ascension", maxPoints: 1, icon: "ability_monk_ascension",
         tree: 0, column: 2, row: 3, prerequisite: -1, description: new[] {
@"Increases the amount of maximum Chi by 1.",})]
        public int Ascension { get { return _data[7]; } set { _data[7] = value; } }
        /// <summary>
        /// Instantly restores all of your Chi.
        /// </summary>
        [TalentData(index: 8, name: "Chi Brew", maxPoints: 1, icon: "ability_monk_chibrew",
         tree: 0, column: 3, row: 3, prerequisite: -1, description: new[] {
@"Instantly restores all of your Chi.",})]
        public int ChiBrew { get { return _data[8]; } set { _data[8] = value; } }
        /// <summary>
        /// Your Paralysis ability is now usable from 20 yards away.
        /// </summary>
        [TalentData(index: 9, name: "Deadly Reach", maxPoints: 1, icon: "ability_monk_deadlyreach",
         tree: 0, column: 1, row: 4, prerequisite: -1, description: new[] {
@"Your Paralysis ability is now usable from 20 yards away.",})]
        public int DeadlyReach { get { return _data[9]; } set { _data[9] = value; } }
        /// <summary>
        /// A mighty Ox effigy rushes forward 30 yards in front of you, stunning all enemies within its path for 3 sec.
        /// </summary>
        [TalentData(index: 10, name: "Charging Ox Wave", maxPoints: 1, icon: "ability_monk_chargingoxwave",
         tree: 0, column: 2, row: 4, prerequisite: -1, description: new[] {
@"A mighty Ox effigy rushes forward 30 yards in front of you, stunning all enemies within its path for 3 sec.",})]
        public int ChargingOxWave { get { return _data[10]; } set { _data[10] = value; } }
        /// <summary>
        /// You knock down all enemies within 5 yards, effectively stunning them for 5 sec.
        /// </summary>
        [TalentData(index: 11, name: "Leg Sweep", maxPoints: 1, icon: "ability_monk_legsweep",
         tree: 0, column: 3, row: 4, prerequisite: -1, description: new[] {
@"You knock down all enemies within 5 yards, effectively stunning them for 5 sec.",})]
        public int LegSweep { get { return _data[11]; } set { _data[11] = value; } }
        /// <summary>
        /// Anytime you drink from a Brew or Tea, you gain 10% of your total health. This effect cannot occur more than once every 15 sec.
        /// </summary>
        [TalentData(index: 12, name: "Healing Elixirs", maxPoints: 1, icon: "ability_monk_jasmineforcetea",
         tree: 0, column: 1, row: 5, prerequisite: -1, description: new[] {
@"Anytime you drink from a Brew or Tea, you gain 10% of your total health. This effect cannot occur more than once every 15 sec.",})]
        public int HealingElixirs { get { return _data[12]; } set { _data[12] = value; } }
        /// <summary>
        /// You dampen the damage from the most harmful attacks done to you. The next 3 attacks within 45 sec that deal damage equal to 10% or more of your total health are reduced in half.
        /// </summary>
        [TalentData(index: 13, name: "Dampen Harm", maxPoints: 1, icon: "ability_monk_dampenharm",
         tree: 0, column: 2, row: 5, prerequisite: -1, description: new[] {
@"You dampen the damage from the most harmful attacks done to you. The next 3 attacks within 45 sec that deal damage equal to 10% or more of your total health are reduced in half.",})]
        public int DampenHarm { get { return _data[13]; } set { _data[13] = value; } }
        /// <summary>
        /// Reduces all spell damage taken by 90% and clears all magical effects on you, reversing them back to their original caster if within 40 yards if possible. Lasts for 6 sec.
        /// </summary>
        [TalentData(index: 14, name: "Diffuse Magic", maxPoints: 1, icon: "spell_arcane_massdispel",
         tree: 0, column: 3, row: 5, prerequisite: -1, description: new[] {
@"Reduces all spell damage taken by 90% and clears all magical effects on you, reversing them back to their original caster if within 40 yards if possible. Lasts for 6 sec.",})]
        public int DiffuseMagic { get { return _data[14]; } set { _data[14] = value; } }
        /// <summary>
        /// You summon a whirling tornado that travels 0 yards in front of you, dealing 5069 to 6010 Nature damage to all targets in its path and increasing damage taken by your Spinning Crane Kick by 30% for 8 sec.\n\n
        /// Brewmaster\n
        /// Causes Shuffle when cast.\n\n
        /// Mistweaver\n
        /// Increases the healing done by your Spinning Crane Kick by 50% for 12 sec.
        /// </summary>
        [TalentData(index: 15, name: "Rushing Jade Wind", maxPoints: 1, icon: "ability_monk_rushingjadewind",
         tree: 0, column: 1, row: 6, prerequisite: -1, description: new[] {
@"You summon a whirling tornado that travels 0 yards in front of you, dealing 5069 to 6010 Nature damage to all targets in its path and increasing damage taken by your Spinning Crane Kick by 30% for 8 sec.

Brewmaster 
Causes Shuffle when cast.

Mistweaver
Increases the healing done by your Spinning Crane Kick by 50% for 12 sec.",})]
        public int RushingJadeWind { get { return _data[15]; } set { _data[15] = value; } }
        /// <summary>
        /// Invokes the White Tiger Celestial, summoning an effigy at the command of the caster. The effigy will assist you, attacking your primary target and also inflicting tiger lightning every 6 sec to 3 nearby enemies within 10 yards dealing 1605 damage over 5 sec. Lasts for 45 sec.\n\n
        /// Brewmaster\n
        /// Xuen will also taunt the target, forcing it to attack him.
        /// </summary>
        [TalentData(index: 16, name: "Invoke Xuen, the White Tiger", maxPoints: 1, icon: "ability_monk_summontigerstatue",
         tree: 0, column: 2, row: 6, prerequisite: -1, description: new[] {
@"Invokes the White Tiger Celestial, summoning an effigy at the command of the caster. The effigy will assist you, attacking your primary target and also inflicting tiger lightning every 6 sec to 3 nearby enemies within 10 yards dealing 1605 damage over 5 sec. Lasts for 45 sec.

Brewmaster 
Xuen will also taunt the target, forcing it to attack him.",})]
        public int InvokeXuentheWhiteTiger { get { return _data[16]; } set { _data[16] = value; } }
        /// <summary>
        /// Torpedo a distance in front of you, dealing 1671 to 1941 damage to all enemies and 2053 healing to all allies in your path.\n\n
        /// Chi Torpedo replaces Roll.
        /// </summary>
        [TalentData(index: 17, name: "Chi Torpedo", maxPoints: 1, icon: "ability_monk_quitornado",
         tree: 0, column: 3, row: 6, prerequisite: -1, description: new[] {
@"Torpedo a distance in front of you, dealing 1671 to 1941 damage to all enemies and 2053 healing to all allies in your path.

Chi Torpedo replaces Roll.",})]
        public int ChiTorpedo { get { return _data[17]; } set { _data[17] = value; } }
        #endregion
    }

}
